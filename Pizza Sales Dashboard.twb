<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0912.2314                               -->
<workbook original-version='18.1' source-build='2025.2.3 (20252.25.0912.2314)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='PizzaSalesDashboard_17615453355810' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='period_of_day_vs_orders' inline='true' name='federated.0qp0wvm00m7mcr17tgfdy14urifx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='period_of_day_vs_orders' name='semistructpassivestore-direct.04pmczr01zkjfz1ghnchj1jkdo2f'>
            <connection class='semistructpassivestore-direct' directory='D:/Data Analyst/Google Cert/Pizza Sales' filename='period_of_day_vs_orders.json' password='' server='' workgroup-auth-mode='as-is'>
              <semistruct-schemas>
                <semistruct-schema table='[period_of_day_vs_orders.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.04pmczr01zkjfz1ghnchj1jkdo2f' name='period_of_day_vs_orders.json' table='[period_of_day_vs_orders.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[period_of_day_vs_orders.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[period_of_day_vs_orders.json_F062200D008846FCAB278F59650E18CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[day_time]</local-name>
            <parent-name>[period_of_day_vs_orders.json]</parent-name>
            <remote-alias>day_time</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[period_of_day_vs_orders.json_F062200D008846FCAB278F59650E18CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>orders</remote-name>
            <remote-type>5</remote-type>
            <local-name>[orders]</local-name>
            <parent-name>[period_of_day_vs_orders.json]</parent-name>
            <remote-alias>orders</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[period_of_day_vs_orders.json_F062200D008846FCAB278F59650E18CB]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='period_of_day_vs_orders.json' datatype='table' name='[__tableau_internal_object_id__].[period_of_day_vs_orders.json_F062200D008846FCAB278F59650E18CB]' role='measure' type='quantitative' />
      <column caption='Day Time' datatype='string' name='[day_time]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>day_time</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Orders' datatype='real' name='[orders]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>orders</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[day_time]' derivation='None' name='[none:day_time:nk]' pivot='key' type='nominal' />
      <folders-common>
        <folder name='Period Of Day Vs Orders'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[day_time]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ayeis/AppData/Local/Temp/TableauTemp/#TableauTemp_0y5esyy0kk5hyq15nectn059gbzo.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/26/2025 08:08:56 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>period_of_day_vs_orders.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[period_of_day_vs_orders.json_F062200D008846FCAB278F59650E18CB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day_time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day_time</remote-alias>
              <ordinal>1</ordinal>
              <family>period_of_day_vs_orders.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[period_of_day_vs_orders.json_F062200D008846FCAB278F59650E18CB]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>orders</remote-name>
              <remote-type>5</remote-type>
              <local-name>[orders]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>orders</remote-alias>
              <ordinal>2</ordinal>
              <family>period_of_day_vs_orders.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[period_of_day_vs_orders.json_F062200D008846FCAB278F59650E18CB]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:day_time:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Afternoon&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Morning&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Night&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Evening&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='period_of_day_vs_orders.json' id='period_of_day_vs_orders.json_F062200D008846FCAB278F59650E18CB'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.04pmczr01zkjfz1ghnchj1jkdo2f' name='period_of_day_vs_orders.json' table='[period_of_day_vs_orders.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Pizza Sales Updated1' inline='true' name='federated.1yk5atw0uuebtq1fuorzt0zkzn21' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Pizza Sales Updated1' name='semistructpassivestore-direct.0be9vbw1co0kng1h4f4vz1klf6bu'>
            <connection class='semistructpassivestore-direct' directory='D:/Data Analyst/Google Cert/Pizza Sales' filename='Pizza Sales Updated1.json' password='' server='' workgroup-auth-mode='as-is'>
              <semistruct-schemas>
                <semistruct-schema table='[Pizza Sales Updated1.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0be9vbw1co0kng1h4f4vz1klf6bu' name='Pizza Sales Updated1.json' table='[Pizza Sales Updated1.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_order_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[new_order_date]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>new_order_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_order_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[new_order_time]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>new_order_time</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_details_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[order_details_id]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>order_details_id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_id</remote-name>
            <remote-type>5</remote-type>
            <local-name>[order_id]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>order_id</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_category]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>pizza_category</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_id]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>pizza_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_ingredients</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_ingredients]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>pizza_ingredients</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_name]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>pizza_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza_size</remote-name>
            <remote-type>130</remote-type>
            <local-name>[pizza_size]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>pizza_size</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>quantity</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_price]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>total_price</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unit_price]</local-name>
            <parent-name>[Pizza Sales Updated1.json]</parent-name>
            <remote-alias>unit_price</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' hidden='true' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pizza Sales Updated1.json' datatype='table' name='[__tableau_internal_object_id__].[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]' role='measure' type='quantitative' />
      <column caption='New Order Date' datatype='date' datatype-customized='true' name='[new_order_date]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>new_order_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='New Order Time' datatype='string' datatype-customized='true' name='[new_order_time]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>new_order_time</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Order Details Id' datatype='real' name='[order_details_id]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>order_details_id</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' caption='Order Id' datatype='real' name='[order_id]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>order_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pizza Category' datatype='string' name='[pizza_category]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>pizza_category</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pizza Id' datatype='string' name='[pizza_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>pizza_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pizza Ingredients' datatype='string' name='[pizza_ingredients]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>pizza_ingredients</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pizza Name' datatype='string' name='[pizza_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>pizza_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>pizza_size</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>total_price</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Unit Price' datatype='real' name='[unit_price]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>unit_price</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[pizza_name]' derivation='None' name='[none:pizza_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
      <folders-common>
        <folder name='Pizza Sales Updated1'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[new_order_date]' type='field' />
          <folder-item name='[new_order_time]' type='field' />
          <folder-item name='[order_details_id]' type='field' />
          <folder-item name='[order_id]' type='field' />
          <folder-item name='[pizza_category]' type='field' />
          <folder-item name='[pizza_id]' type='field' />
          <folder-item name='[pizza_ingredients]' type='field' />
          <folder-item name='[pizza_name]' type='field' />
          <folder-item name='[pizza_size]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/ayeis/AppData/Local/Temp/TableauTemp/#TableauTemp_0beny9n0kd4mb30zkccpw1k3myac.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/26/2025 08:08:43 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>new_order_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[new_order_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_order_date</remote-alias>
              <ordinal>0</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>660</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>new_order_time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[new_order_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>new_order_time</remote-alias>
              <ordinal>1</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15483</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_details_id</remote-name>
              <remote-type>5</remote-type>
              <local-name>[order_details_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_details_id</remote-alias>
              <ordinal>2</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48620</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>order_id</remote-name>
              <remote-type>5</remote-type>
              <local-name>[order_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>order_id</remote-alias>
              <ordinal>3</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17408</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_category</remote-alias>
              <ordinal>4</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_id</remote-alias>
              <ordinal>5</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_ingredients</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_ingredients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_ingredients</remote-alias>
              <ordinal>6</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_name</remote-alias>
              <ordinal>7</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pizza_size</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pizza_size]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pizza_size</remote-alias>
              <ordinal>8</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>quantity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>quantity</remote-alias>
              <ordinal>9</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_price</remote-alias>
              <ordinal>10</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>unit_price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[unit_price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>unit_price</remote-alias>
              <ordinal>11</ordinal>
              <family>Pizza Sales Updated1.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:pizza_name:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;The Thai Chicken Pizza&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;The Pepperoni Pizza&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;The Barbecue Chicken Pizza&quot;</bucket>
            </map>
            <map to='#ccb22b'>
              <bucket>&quot;The Hawaiian Pizza&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;The Classic Deluxe Pizza&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:pizza_size:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;L&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XXL&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;XL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Pizza Sales Updated1.json' id='Pizza Sales Updated1.json_CEB03A3DC1BB4587A6FF286CA3ABB474'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0be9vbw1co0kng1h4f4vz1klf6bu' name='Pizza Sales Updated1.json' table='[Pizza Sales Updated1.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Orders Per Day Period'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Orders Per Period of Day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='period_of_day_vs_orders' name='federated.0qp0wvm00m7mcr17tgfdy14urifx' />
          </datasources>
          <datasource-dependencies datasource='federated.0qp0wvm00m7mcr17tgfdy14urifx'>
            <column caption='Day Time' datatype='string' name='[day_time]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>day_time</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[day_time]' derivation='None' name='[none:day_time:nk]' pivot='key' type='nominal' />
            <column caption='Orders' datatype='real' name='[orders]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>orders</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[orders]' derivation='Sum' name='[sum:orders:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0qp0wvm00m7mcr17tgfdy14urifx].[none:day_time:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Afternoon&quot;</bucket>
              <bucket>&quot;Evening&quot;</bucket>
              <bucket>&quot;Night&quot;</bucket>
              <bucket>&quot;Morning&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0qp0wvm00m7mcr17tgfdy14urifx].[sum:orders:qk]' />
              <text column='[federated.0qp0wvm00m7mcr17tgfdy14urifx].[none:day_time:nk]' />
              <color column='[federated.0qp0wvm00m7mcr17tgfdy14urifx].[none:day_time:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0qp0wvm00m7mcr17tgfdy14urifx].[none:day_time:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0qp0wvm00m7mcr17tgfdy14urifx].[none:day_time:nk]</field>
                  <field>[federated.0qp0wvm00m7mcr17tgfdy14urifx].[sum:orders:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Morning&quot;</value>
                <value>2693.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0qp0wvm00m7mcr17tgfdy14urifx].[none:day_time:nk]</field>
                  <field>[federated.0qp0wvm00m7mcr17tgfdy14urifx].[sum:orders:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Night&quot;</value>
                <value>3966.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{38A5B8DB-4255-45AC-AE01-F02539370CF2}' />
    </worksheet>
    <worksheet name='Pizza Per Day of the Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pizza Orders Per Day of the Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pizza Sales Updated1' name='federated.1yk5atw0uuebtq1fuorzt0zkzn21' />
          </datasources>
          <datasource-dependencies datasource='federated.1yk5atw0uuebtq1fuorzt0zkzn21'>
            <column caption='New Order Date' datatype='date' datatype-customized='true' name='[new_order_date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>new_order_date</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>quantity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_order_date]' derivation='Weekday' name='[wd:new_order_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='rows' value='Orders' />
            <format attr='display' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
              <text column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='401' />
                <format attr='maxheight' value='401' />
                <format attr='minwidth' value='420' />
                <format attr='maxwidth' value='420' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]</rows>
        <cols>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[wd:new_order_date:ok]</cols>
      </table>
      <simple-id uuid='{383E1004-F2A7-4827-A7B9-D9AB013D2178}' />
    </worksheet>
    <worksheet name='Pizza Popularity'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Pizza Orders (Top and Bottom 5)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pizza Sales Updated1' name='federated.1yk5atw0uuebtq1fuorzt0zkzn21' />
          </datasources>
          <datasource-dependencies datasource='federated.1yk5atw0uuebtq1fuorzt0zkzn21'>
            <column-instance column='[pizza_name]' derivation='None' name='[none:pizza_name:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Name' datatype='string' name='[pizza_name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>pizza_name</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>quantity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pizza_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Big Meat Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The California Chicken Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Chicken Alfredo Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Chicken Pesto Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Five Cheese Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Four Cheese Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Greek Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Green Garden Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Italian Capocollo Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Italian Supreme Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Italian Vegetables Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Mexicana Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Napolitana Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Pepper Salami Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Pepperoni, Mushroom, and Peppers Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Prosciutto and Arugula Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Sicilian Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Southwest Chicken Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Spicy Italian Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Spinach Pesto Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Spinach and Feta Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Vegetables + Vegetables Pizza&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='cols' value='Orders' />
            <format attr='display' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' palette='red_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
              <text column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</rows>
        <cols>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]</cols>
      </table>
      <simple-id uuid='{B0BBF6E9-3FD2-4A90-B9EC-3FA44C9A0337}' />
    </worksheet>
    <worksheet name='Pizza Size'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Overall Order&apos;s Pizza Size</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pizza Sales Updated1' name='federated.1yk5atw0uuebtq1fuorzt0zkzn21' />
          </datasources>
          <datasource-dependencies datasource='federated.1yk5atw0uuebtq1fuorzt0zkzn21'>
            <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>pizza_size</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>quantity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='cols' value='Orders' />
            <format attr='display' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]' />
              <text column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]</rows>
        <cols>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]</cols>
      </table>
      <simple-id uuid='{B93E4434-877E-4B1A-A81B-08091E8AC149}' />
    </worksheet>
    <worksheet name='Pizza Size For The Classic Deluxe Pizza'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Order Sizes For </run>
            <run bold='true'>The Classic Deluxe Pizza</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pizza Sales Updated1' name='federated.1yk5atw0uuebtq1fuorzt0zkzn21' />
          </datasources>
          <datasource-dependencies datasource='federated.1yk5atw0uuebtq1fuorzt0zkzn21'>
            <column-instance column='[pizza_name]' derivation='None' name='[none:pizza_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[pizza_size]' derivation='None' name='[none:pizza_size:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Name' datatype='string' name='[pizza_name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>pizza_name</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Pizza Size' datatype='string' name='[pizza_size]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>pizza_size</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>quantity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]'>
            <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Classic Deluxe Pizza&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='cols' value='Orders' />
            <format attr='display' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]' />
              <text column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]</rows>
        <cols>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]</cols>
      </table>
      <simple-id uuid='{35AAD8AF-33D1-49BC-BFC6-00348B899799}' />
    </worksheet>
    <worksheet name='Revenue Per Pizza Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Revenue Per Pizza Type (Top and Bottom 5)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pizza Sales Updated1' name='federated.1yk5atw0uuebtq1fuorzt0zkzn21' />
          </datasources>
          <datasource-dependencies datasource='federated.1yk5atw0uuebtq1fuorzt0zkzn21'>
            <column-instance column='[pizza_name]' derivation='None' name='[none:pizza_name:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Name' datatype='string' name='[pizza_name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>pizza_name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[total_price]' derivation='Sum' name='[sum:total_price:qk]' pivot='key' type='quantitative' />
            <column caption='Total Price' datatype='real' name='[total_price]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>total_price</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:pizza_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Big Meat Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Calabrese Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Chicken Alfredo Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Chicken Pesto Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Five Cheese Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Four Cheese Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Greek Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Hawaiian Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Italian Capocollo Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Italian Supreme Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Italian Vegetables Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Mexicana Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Napolitana Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Pepper Salami Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Pepperoni Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Pepperoni, Mushroom, and Peppers Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Prosciutto and Arugula Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Sicilian Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Soppressata Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Southwest Chicken Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Spinach and Feta Pizza&quot;' />
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Vegetables + Vegetables Pizza&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:total_price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:total_price:qk]' scope='cols' value='Revenue' />
            <format attr='display' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:total_price:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:total_price:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e8edf0</color>
                <color>#e0e9ef</color>
                <color>#d8e5ee</color>
                <color>#cfe1ed</color>
                <color>#c7ddec</color>
                <color>#bfd9eb</color>
                <color>#b7d6ea</color>
                <color>#afd2e9</color>
                <color>#a7cee8</color>
                <color>#a0cbe8</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:total_price:qk]' />
              <text column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:total_price:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</rows>
        <cols>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:total_price:qk]</cols>
      </table>
      <simple-id uuid='{D1E2D5D0-1FE1-4301-93CC-CEAF59369F85}' />
    </worksheet>
    <worksheet name='The Classic Deluxe Pizza Per Day of The Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>The Classic Deluxe Pizza</run>
            <run> Orders Per Day of The Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pizza Sales Updated1' name='federated.1yk5atw0uuebtq1fuorzt0zkzn21' />
          </datasources>
          <datasource-dependencies datasource='federated.1yk5atw0uuebtq1fuorzt0zkzn21'>
            <column caption='New Order Date' datatype='date' datatype-customized='true' name='[new_order_date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>new_order_date</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pizza_name]' derivation='None' name='[none:pizza_name:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Name' datatype='string' name='[pizza_name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>pizza_name</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>quantity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_order_date]' derivation='Weekday' name='[wd:new_order_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]'>
            <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Classic Deluxe Pizza&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='rows' value='Orders' />
            <format attr='height' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[wd:new_order_date:ok]' value='57' />
            <format attr='display' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
              <text column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='248' />
                <format attr='maxheight' value='248' />
                <format attr='minwidth' value='420' />
                <format attr='maxwidth' value='420' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]</rows>
        <cols>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[wd:new_order_date:ok]</cols>
      </table>
      <simple-id uuid='{3538BB21-C708-42B2-A9CC-08C055D3A8A9}' />
    </worksheet>
    <worksheet name='The Classic Deluxe Pizza Per Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>The Classic Deluxe Pizza</run>
            <run> Orders Per Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pizza Sales Updated1' name='federated.1yk5atw0uuebtq1fuorzt0zkzn21' />
          </datasources>
          <datasource-dependencies datasource='federated.1yk5atw0uuebtq1fuorzt0zkzn21'>
            <column-instance column='[new_order_date]' derivation='Month' name='[mn:new_order_date:ok]' pivot='key' type='ordinal' />
            <column caption='New Order Date' datatype='date' datatype-customized='true' name='[new_order_date]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>new_order_date</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[pizza_name]' derivation='None' name='[none:pizza_name:nk]' pivot='key' type='nominal' />
            <column caption='Pizza Name' datatype='string' name='[pizza_name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>pizza_name</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Quantity' datatype='real' name='[quantity]' role='measure' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>quantity</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[quantity]' derivation='Sum' name='[sum:quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([quantity])' function='order' user:ui-marker='order'>
                <groupfilter function='member' level='[none:pizza_name:nk]' member='&quot;The Classic Deluxe Pizza&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='rows' value='Orders' />
            <format attr='display' class='0' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]' />
              <text column='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]</rows>
        <cols>([federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk] / [federated.1yk5atw0uuebtq1fuorzt0zkzn21].[mn:new_order_date:ok])</cols>
      </table>
      <simple-id uuid='{8742A222-B9EC-4F19-BFB0-7EAE6A237F86}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='24' param='horz' type-v2='layout-flow' w='99060' x='470' y='885'>
            <zone h='98230' id='8' param='horz' type-v2='layout-flow' w='99060' x='470' y='885'>
              <zone h='98230' id='6' type-v2='layout-basic' w='99060' x='470' y='885'>
                <zone h='49116' id='5' name='Pizza Per Day of the Week' w='24763' x='470' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49116' id='11' name='The Classic Deluxe Pizza Per Day of The Week' w='24766' x='49997' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49114' id='12' name='The Classic Deluxe Pizza Per Month' w='24779' x='49971' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49116' id='15' name='Pizza Size' w='24764' x='25233' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49116' id='16' name='Pizza Size For The Classic Deluxe Pizza' w='24767' x='74763' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49114' id='17' name='Orders Per Day Period' w='24780' x='74750' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49114' id='18' name='Revenue Per Pizza Type' w='24737' x='25234' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49114' id='27' param='horz' type-v2='layout-flow' w='24764' x='470' y='885'>
                  <zone h='49114' id='3' name='Pizza Popularity' w='24764' x='470' y='885'>
                    <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2350' minheight='2350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='32' param='vert' type-v2='layout-flow' w='99060' x='470' y='885'>
                <zone fixed-size='280' h='49114' id='3' is-fixed='true' name='Pizza Popularity' w='24764' x='470' y='885'>
                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49114' id='18' is-fixed='true' name='Revenue Per Pizza Type' w='24737' x='25234' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49114' id='12' is-fixed='true' name='The Classic Deluxe Pizza Per Month' w='24779' x='49971' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49114' id='17' is-fixed='true' name='Orders Per Day Period' w='24780' x='74750' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49116' id='5' is-fixed='true' name='Pizza Per Day of the Week' w='24763' x='470' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49116' id='15' is-fixed='true' name='Pizza Size' w='24764' x='25233' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49116' id='11' is-fixed='true' name='The Classic Deluxe Pizza Per Day of The Week' w='24766' x='49997' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49116' id='16' is-fixed='true' name='Pizza Size For The Classic Deluxe Pizza' w='24767' x='74763' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{099F04D7-F175-43D6-B9BC-C12948922D3D}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='The Classic Deluxe Pizza Per Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[ctd:quantity:qk]</field>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[mn:new_order_date:ok]</field>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</field>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[yr:new_order_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97D4C3AA-FACF-40F9-8F98-DDF54B8F2023}' />
    </window>
    <window class='worksheet' name='Orders Per Day Period'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qp0wvm00m7mcr17tgfdy14urifx].[none:day_time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22E96D5E-051C-4C5F-AB5C-44392ED2557D}' />
    </window>
    <window class='worksheet' name='Pizza Popularity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A868F0A-25CB-4C10-9CCC-8CD50FE84102}' />
    </window>
    <window class='worksheet' name='Pizza Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E436B550-6C94-4203-BCFD-8C0D509749C2}' />
    </window>
    <window class='worksheet' name='Pizza Size For The Classic Deluxe Pizza'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</field>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BF11ED2-5561-45AC-99AF-2E1307F41BBB}' />
    </window>
    <window class='worksheet' name='The Classic Deluxe Pizza Per Day of The Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</field>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]</field>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[yr:new_order_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D9F30FB-073C-43BE-9F65-0C5D1B8561FC}' />
    </window>
    <window class='worksheet' name='Pizza Per Day of the Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[sum:quantity:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</field>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_size:nk]</field>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[yr:new_order_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3519DC17-143E-4AF0-8D82-36F5A43910EA}' />
    </window>
    <window class='worksheet' maximized='true' name='Revenue Per Pizza Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yk5atw0uuebtq1fuorzt0zkzn21].[none:pizza_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF49C010-30D5-4EB7-94C2-1E3CC94272D7}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Orders Per Day Period' />
        <viewpoint name='Pizza Per Day of the Week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pizza Popularity'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pizza Size'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pizza Size For The Classic Deluxe Pizza'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Revenue Per Pizza Type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='The Classic Deluxe Pizza Per Day of The Week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='The Classic Deluxe Pizza Per Month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{221B45A6-39A2-4D7E-A0C6-A6D9CB77431B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      VvsDxONVidR1fOwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Orders Per Day Period' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pizza Per Day of the Week' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbS0lEQVR4nO3daXAc553f8W93T889GAAzGGBwESQokDRAgiDFS7JFm6JF21rbkWQdWa9l
      12bXypbXlTipJK/WyYtsVaqycW05znrjSq2z60pFtkVtLGlpUsYqIikSFCmTBAkQAAGCOAkM
      rsHcV3c/eYGIksxTIglQ6ufzigVw+vljpn/dTz/9PD2KEEIgSTakKIqirnQRkrSSZAAkW/tA
      ACzLQvaIJDu5JgCSZCeyCyTZmmOlC5A+3izLoquri1QqxZYtW4hEIuTzebq6ujAMgx07dhAI
      BDhw4AA7d+5kcXGRwcFBampqaG9vR1GUFa1fngGkO5JOp5mcnKS1tZUzZ84AS6Foa2sjGo1y
      6dIl+vr6uHTpEvF4HK/Xy2c/+1n6+vrui+tNGQDpjng8HlKpFAcPHiQajQLg9XqJxWL09/fT
      2NjIpUuX2LhxIwAVFRW89tprtLW1rfjRH2QXSLpDMzMzRCIROjo66O7u5oEHHiCZTHLq1Cm+
      /OUvk0qliMViHDlyhLa2Nvx+P+vXr6eurm6lSwdAef+dYMMw0DTtvkim9PEghODkyZMkEgk6
      Ojro6upi69atHD9+HFVV2b59Ow0NDcRiMdxuN+fPn2d6ehq/38++fftWdF9TFEWRAZDuGtM0
      KZVKuN1uhBCkY5MI0yQQbUBR77/etpwKId1VmqbhdrsByM5Oc+hffoMDf/ociyNDK1zZjckA
      SHeVsCzmB87z5ve/Q2pqnNzCLIf/w3eZOP4GwjJXurxryC6QdFcIIUiODnHhxZ8w8uYBIpt3
      0vzFpwEYPrSf2OnjRLfsYvMf/RvKVjWjais//iKvAaS7opBYYOz/vkbfi/8d1eVh3VN/SPOX
      nkZ16ABYhkHsbBfd/+MvyEyOsHrfk2x47p/jCVevaN0yANIdEabJ1NtvcOFnPyQ1OUrzV59n
      7Ve/gfcGO3YhucjI6y8z+PLfoDl01j/7Ag17voLD413mypfIAEgfWWr8Ev1/95dMnzpMZNvn
      aHnmjylv3oCiajd9nRCC/MIMfT/7IWOHfkn52k+x6U++T+WntixT5e+5bgBM05QBkK5LCEEp
      tcjYr/83Y6/8LXowTMsf/AsiOx+95Y5/7bYsUsP9DPztfyExcJZQx8O0PP+v8UYbl23/c7lc
      8gwg3R6zWGD27X+k/2/+E0axwJqnvk3jF5/D4fHd0XYtw2DqrV8z9OKPKM5Ps+Zr36Zh37M4
      y8N3qfIbk10g6ZaEsFjsPcXIyz8hfuEdwtv2suaZP8HfsPautlNMLTJx6OeMvfo/0T1emp56
      gZrPfBnN7bmr7byfDIB0U4X4DGP7/5qpN/bjqmmi+fe/R+Xmh6+O7txtQgiyU6OM/OK/MXfi
      EGXNraz+/e9R3rr9nrQnAyBdQwiBMA1m3nyZ0V/8V0qZNGv/+N9TtXMfmnt5RmuEaZC61Mul
      n/456eEeqnY+RtM//Ve4qhvu6r4pAyB9gLAsFs8eYeKlH5GZGCL8yD+h/qvfxl1Vu2I1xd7Y
      z8Tf/xgjMUft7/0hNfu+jh4M3ZVtywBIwNKOX5geYabzRWKv/y+8azfT8Nz3CLRsuS8msRmZ
      JBMv/Yi5w/vRfWWs+tafUbbxIVSn+462KwMgYWZTzL7+M2YO/h04nNQ+8z0qduxDc63Mzakb
      EZZFbnKIqZf/isWTBwm27aLmyT/F19LBR53TKQNgc4lTB4n9n7+iMDdF5eeepeqxb+CsXNnp
      CbcijBKJc0eJ7f8hhalhwnuepepL/wy9suZDb0sGwGaEsCiM9WGm4sSPvETi1Ot41m4h+vyf
      4a5v+dh87kIIRKnA4rFXmHn5h4hSjvJtj+GsWU3Fo19Hdd/evQkZABsRRonc0Gkm/vO3sEoF
      9NoHiDz77wh07Fnp0u6IkZxn5hd/QfLwzwGo+95PCGzZe1uvVRRFWfk5qdI9ZWVTZM6/Sarr
      FbL9bwOg+cqp/84PcTWsW+Hq7pyjLETNN76PMTuOVcjijK7+UK+XZ4BPqNLcOKlj+8mc+Q3F
      qWE8Gz5NYNdX0aPNKKqGM9qMon24+Tv3M6tUQBglNI//tl8ju0CfMMIyyfcdI3X0RXL9JxBC
      EPj0s/i3/x7OuhYUh3OlS7yvyC7QJ4CwTMzELNmTf0/6+H6MxRn06AOEv/HneNp2o/7OcGax
      WOTYsWOk02mCwSCPPPLI0naE4MSJE7S2tnL69GlSqRRlZWV0dHRw8uRJ6uvraWlpQb0P7gv8
      rvn5eTo7O5mbm2PTpk185jOfQQjB2NgYL730Es8//zyHDh3Csiw+//nPMzw8zPz8PCCfC8Ti
      4iJHjhyhvr6ejo4OAC5cuMDY2BhtbW0IITh16hQdHR1UV1fT2dmJpmns2bMHr3flxspFKU9h
      +Lfk3nmN3Pl/BM2Je+NefDufxNnYesPpybqus3PnTubm5jh9+vTVnw8ODtLZ2cmqVavYsWMH
      s7OzdHd309nZycMPP8xbb71FJBKhsrJyuf7E2xYKhXj66ac5ePAgGzZsAKBQKHDu3DnC4TCj
      o6O0t7dTUVFBf38/O3bs4PLly4DNAyCE4OjRo+zYsYOKigpg6Qh59uxZHn/8cV5//XVM0+SJ
      J57g1VdfZf369dTW1rJp0yaczpXpTljpBXJn/oF89yEKI93otRsIfOE7eDbuxRG69cOmFEXB
      4/Fw9uxZdu/eDUAmk+HixYtXDwBut5uBgQG2bdvG1NQUv/rVr/B6vSsa+FuZm5tD13VCodDV
      z3VmZobLly+za9cu+vr6SCaT1NbWYpomsVgMkAFgdHSUQqFAsVjkqaeewuFw4Ha7+eUvf0lL
      SwuZTIYDBw4Qj8dRVZXf/va3nD9/nieffJLy8vJlqtPCGO8hd/IlCv1vYabmcW/+IpV7X8DZ
      tOW2x73fNT8/j6ZpBINBYOnpbsPDw1y6dIlCocDnPvc5isUikUiE3/zmN3zzm9/k2LFjLCws
      UFu7cvOCbkQIwenTp+no6EBRFHp7e+no6GD16tWk02nKysqorKykWCzS1NTEqVOnrn4VgK0v
      goUQvPzyy+zZs4cTJ07w0EMPoaoqr732Gl/5ylc4cOAAjz/+OOl0mrfeeotHH30UXdfp6enB
      4/Fcfd7lvaqNQoZC72/In/g5pSv9qIEqPA//Aa5NX0ANhD/0Kqx3jYyMEAwGKS8v5+DBg+zY
      sYPKykqGhoaorq4mmUyi6zqRSITJyUmOHj1KJBJh9+7daPfhyJEQAsMwcDgc5HI5enp62L59
      aQp1qVRC0zSSySSapuH3+8lms+RyOaqqquQo0OLiIsePH6empoZUKsWaNWuYn5/n8uXLbN26
      lWw2y/Dw8NVuz/Hjx/F6vTz66KP3ZGcQpoEZu0jx3AEK3f+AlUuir30Y945n0VdvR7mLc/Et
      yyKVSl09E9jNdYdB7SyTyeDz3dkSv48kn4TUDNbCCKXzv6Z08S2EP4Jjw16cn9qLVte6/DXZ
      gK7r1w+Anc4ANyIKaayFMbTqdXCTroYo5cEsgVlc+rdlIorZ935mFN/7XSmPMEtQykEphygV
      wChgTZ5DxAawjBKO5ofQ276EumYXirdiGf9i+3E4HNfeB7BbF+h6RCFN4dB/xBg8jLbqQRR3
      EJFPgWkgihkw8ks7dDELwgLLAmEhLBOBAMsAId77nWWBMEFzgqaj6G7QXSiaCxwuyMbBLOL7
      +l8vtSdvWC2bFRsFsiyLZDKJz+dD19/r1+bzeZxOJ6Zpks/n8fl8CCHIZDJomobX672rARVC
      gFVC5FOY4+9g9B7EHD0JpTwYJazFK6hlAsUdANWBUlGH4nCD7kZxekH3ougucLhRXL6ls4XD
      jeLyL+3oqg5Oz9Lrr5m3roACIrOAyCVQw2tsf/BZbityESyEoLOzk0KhQHt7Ow0NDQCkUil+
      8IMf8MILL/D222/j8/lQVZVwOExPTw9NTU1s374dh+POcytKeURiAmP0BMalo1jTF0DR0Wo3
      4mjejVLRiEhcQWt+GNV3d5bgSfeXFZsKkc1mGRoaor29/erR37IsDh8+zLp16yiVShiGgaqq
      FItFxsfH8fv91NXV3dHIizCKWPNDmOOnMIePYs0Oge5BrWnD9ei/RYtuQqm4dw9mmp+f5803
      36ShoYEHH3wQgHfeeYexsTH27t1LMBhk//797Nmzh2w2S1dXFxs2bKCtre2e1COtUBfINE2C
      wSC1tbUcOXKEZ555hgsXLnDmzBkymQwejwdVVYlGowwODvLII48Qi8U4efIk5eXlH2rYTpRy
      WLMDmBPvYI4cw4qPoTj9aPVb0dufRq3rQPGGPvKY+m3XIQTHjh1j9+7dBINBFEWhWCwyOTnJ
      vn37ME2T06dPMzMzQyKRoLu7m7179xIIBO5pXXa3IgHw+/1omkZPTw+6rtPf309tbS3f/e53
      6ezsZP369XR1ddHf348QgsHBQcbGxq7eoLkZIQQYeazZPoyLhzAnTiFyiyjuCrSmz+B8+Luo
      VetB9yx7f3t8fJzDhw+TTCZ57rnnrl7rvPrqq2zevJmxsTHWrFlDsVhkZGTk6nXSt771rWWt
      005W7EaYEIJCoYCu63R3d9Pe3v6B7s27v3e5XMDS5Can03nd2YhCWJBPYM70YI4dwxzrQhSz
      KP4ojsaH0BofQq2+8QSx5SCE4JVXXqG9vZ3e3l62b99OIBAgn88Tj8dJp9OcOXOG3t5etm3b
      hqqqbNu2ja6uLp555pkVq/uT7GO9HkCYJUR6Cmu2F/PKbzFj5xGlPGpFM4767aiRNtTQAygO
      10qXelUmk+H06dOEQiEWFxdpbGwkkUgQj8fp6OjA5/MxMzOD3+8nl8vR399PdXU1a9fe3ccQ
      Sks+dgEwJk9gXnkbNVCHOXkKKz4EpoEabkWr34VWsxnFX4Oi3ZtH991NuVwOt9t9377XdvCx
      CIAQApGZwZx4i9LAfsgvgKqjVm3G0fBp1Op2FE/oY7HTS/eX+3JFmBAChInIzWPFzmBOdmHN
      9izt9GX1CIcLvf2P0Op2feQHIknSu+6bM4AQFhQSWAuDmGNvYs2eB1VHKV+DVrsDLboNxb08
      8+8le1jxLpAQAooprPhFrOnTS0d6I49S0YxavQW1aiOKLyKP9NI9sWIBEKUcIn4RK9aNNdcL
      xTRKcBVqpB21uh08VSs6ZCnZw7JdAyxNODMQiRHE1EmsuQtQWAR3Bdrqz6NG2sFVLi9kpWV3
      7wIgBMIqQXYOMf0OVuwMFJPgrkCNPohS8yBKoP6+GnGS7OfuB8AsIXJziPl+mOtBpKeXdvrI
      JpRIOwQa5JFeum/c+TVAKbt0lFc1SFyG+X5EJgYOD1S2oITWg78ORb93X3YmSR/FnV8DmCUY
      egUSo4ACWBBuRWn8LPhrUfT79zkykgTX6QIVi8XbPwOYJRylAioCs2ozVnQXaC5QFBBAsXiX
      y5Wku+vOu0DFDGRnoKwB1PvuxrIk3dCK3wiTpJV03WuAhYUFOjs7qauru/qktJ6eHrq7u9m6
      dStOp5O+vr6rD1k9cOAADoeDxx57jLKyspX4OyTpI7tmjsHRo0d57LHH2Llz59UzQV9fH1/7
      2tfo7+8nGo3yhS98gVgsxuTkJA0NDTzxxBNy6Z70sXRNAGZmZnjjjTf46U9/SjKZBJYeqe10
      OimVShSLRV588UUcDgehUIihoSF+/OMfMz4+vuzFS9KduiYAjY2NtLS0EI1GSafTpFKpq6uT
      HA4HiUSCXbt2oes6qVSKHTt20NraSjweX4n6JemOXHMRbJomFy5cIBAIkEwmCYfDeL1eRkdH
      rz5uOhaLUVZWRn19Pf39/WiaxsaNG+/LJwdL0o3cchSoWCyi67ocFZI+kW55J3ilvgVFkpaL
      XGki2ZoMgGRrMgCSrckASLYmAyDZmgyAZGsyAJKtyQBItiYDINmaDIBkazIAkq3d2aJ4SfqY
      uyYATqdTBkCyDdkFkmxNBkCyNRkAydZkACRbkwGQbE0GQLI1GQDJ1mQAJFuTAZBsTQZAsjUZ
      AMnWZAAkW5MBkGxNBkCyNRkAydZkACRbkwGQbE0GQLI1uSZYsjW5JliyNdkFkmxNBkCyNRkA
      ydZkACRbkwGQbE0GQLI1GQDJ1mQAJFuTAZBsTQZAsjUZAMnWZAAkW5MBkGxNBkCyNRkAydZk
      ACRbkwGQbE0GQLI1GQDJ1q5ZE2wYxkrUIUkr4poAqKoqF8VLtiEDINmavAaQbE0GQLI1GQDJ
      1mQAJFuTAZBsTQZAsjUZAMnWZAAkW5MBkGxNBkCyNRkAydZkACRbkwGQbE0GQLI1GQDJ1mQA
      JFuTAZBsTQZAsjX5TfGSrclvipdsTXaBJFuTAZBsTQZAsjUZAMnWZAAkW5MBkGxNBkCyNRkA
      ydZkACRbkwGQbE0GQLI1GQDJ1mQAJFuTAZBsTQZAsjUZAMnWZAAkW5MBkGxNBkCyNbkoXrI1
      uShesjXZBZJsTQZAsjUZAMnWZAAkW5MBkGxNBkCyNRkAydZkACRbkwGQbE0GQLI1GQDJ1mQA
      JFuTAZBsTQZAsjUZAMnWZAAkW5MBkGxNBkCytWuWRAohEEKsRC2StOyuCYBlWcvSsGVZqOry
      nIAsy0JRlGVZ67ycbZmmiaZp97ydT3Jb1wRA07Rl+fAMw1jWtlRVXZbALWdbQggcjms+QtnW
      h6CI9/V33v3ncuyUsq2709ZyPcHjk9iWoiiK+js/+J2GBam5K1zoHyJTNG+5wdxijGThthv/
      QFvzk2Ms5ksgBPNT4yyk8rfcRmIuRv7WZX2grVxihvPnznHu3HmuzKVur1igmE4TT6dvu61s
      fIG8BbnkPPOJHEIUiMcz1/x/I59nfnHxtuv43bYwc1y80Et3dzeDw5PMzcco3MZ78n7Z5CKp
      7M0/uBvtkFcu99PT08P0wnvvTTYep/DucTWfIJbIfah63m3LMvIMD/QxEYvz/qtSIQTmbXTV
      M/EYqeLN/8/NzzPGImcvzrPzwQfIFvJki+D2+8im0zgwSebyqJqHUIWXxXiSZGwUR20IkUtj
      WgqBMjemqeFUDfKWA6/rxs0tTF9kIelgW0uY872nqV61C4+SJ57IUR6uQimmSeXyaE4/FQEn
      i4k0MxMT1PgqyBcyCBz4PA5QXahmHsPhxu24thvi8lcS9c9zRSmjqtxNJpPD7dQoWoCRJZEq
      Ul5ZiVnIUCwJ/OVlFFIJkrMLZP1+nMKgaFh4vAFMy8Ln0cmk8/j83g+0I3JXGM558C30MlJs
      5KHGPBO5RnRlnnRREApVUswkSSdSxE2BpgiymRKRmjDZxAJZQyVcGSSbTGApOoHyANftFasu
      Vq1ezTtnu9nwqWrGB7tJ58Af8FHmBJx+jEIal0MlnTdAdaAYRQxUKsr8pJKLzMViuMK1UMph
      WAKvz4clwONUSGdN/D73DT+3eCJH84ZPoWsamUyaQtHAYZioQCaVoLg4yZQZpUwrkS+ZuL1e
      hCnweN1kMmn8Pv8Nt91/9gxVG7biKmQoGUVy6QwmDjwiy5lLE7Su34AD8HrdZHN5HIpFNl/C
      F/STSaSIT4/hqQ9hZdOYQiHgd2NaGk6lRB4ncKsAaH5qAyW6e4dofqCJwfMDrNu1ld6e81Q7
      VYq1TeTGL2Ek3MyKMnymhcMymJuLMTs6SGjjw+QX4lS5Chjlq24aAM0bQS3MkU9buIO1KFaO
      vr4pVq2upqfvIhVGAq2xmfilIVJeBaOsBtO0EGaR2ViMqZExVre3kis40FJThNe2XTcAqubA
      qevoihNVZLlwYZINjX5GsgbZyWlq6sL0DMxiJhapqmvC5SnR2x+jrsKFEJCKzzEzN0tRj+AR
      eVavKmcwprK55YMBcIUaKPUPk9aqqXKlGB43qV1n0ntuiLBfYz6bJj2dpDEaxBIKV/IG3thl
      Rt0O5gZGKPcI0oUw4xdjPLBuDf7ywPXfOEXF6XTicDhw6g4sowSKxvDQIFFPHqV+F/OXLrAm
      5OTomINtzUEuDl+hoakJH4v0j5aodJoIIVicizE7P40zuBqrmKc5ojBSrKbtJgEoZFNMTU0T
      qizj/JlzVK9ehzoxgifgZvriJRrDToQQZBLzTMVmyejllIk8q1saGBicZ+vmtTfcdmPTKnp7
      zhCqaaLRqzMTm2Z0cIK2Xa0YpRIlM8fFC+Ns3rKOvoEB3PlFjFAT1fFJ5rUQbtMEq8TsTIzZ
      sSGq2naST6SpVNMQaV7aH27Y+tJuSVPrZtqaqxm+PMrSmUkgBGi6l0hNNT6Pg2SySLQhSjDg
      JRufJ6s4qal0UVTL8JiLjMYNqoKemzeFQtTv4OzAHLUNIbBK4PRTEYrgEAV0l59IJILXrZHM
      CRpqqwn4XMRj0+ApI+TTcATCGPEx4oaHgOt2RhFUVAWWzq8lLFz4ykKsqqtnQ+t6lMwU0/Nx
      3BV1VATLcCgZpmbyRKojmCWTcNDB2d4JGuvD175zupd8ah7V58WnO4gVDQKihOpwUVHTQNRn
      4gzWUFEeRFchXF1FVbmXolFEdXgI1zUQLq9hU9tq0rOjLN66RwiAw+0jUhXG49JR1aWuxLt9
      6qaWViLVUVrXNZGcmCCZTeCPNFBeFkAz4sSSClWRSgxDJ+gs0X15kebojY/QAA7dSSDgx+lQ
      KauqZ21jDaqqYJpF3L5KQuVlODSYjM0RiYSwDJPaCg9nT/cTXdt00217KqrZvu1BRPwyQ5Mz
      oPupdDrAGyAUjhAO+nm3ZyYAjz9ES8tqiukStQ1RyvxesvOz5DU31RVODEc5ztI840mLsN+1
      VP9NKxAl+rrPU7IUoqvXI+JjDJw7j6ciQiDoxQWUV4bx+1309pxDVwT1q3xcmVggIfxUezQ8
      oSCphI5Tu/lFTbAyTKAyQKI4R5U/QEpzUp6NMdDbQ1XjOnzFBDpQGQrjdwp6z3ajaTpNkQCj
      V2Yw3RX4nC7w6ujeCNpNLqKcgXIqFTeq5sGr5xiayFKxai2hWsHo+CjhSAOJ1Bx5y0VtZSPF
      +V4G0w6q16zC684wt5CmqqqWqmqNwckCZZ5r30ZFcVAXDaNXhCnHSVIrQ/cEqQqoXB6bpKF5
      PT5jgIHLGpV1DXgBPRgm4g3h9E4zMjFN0yqdKzNzaLofZzHOVFpFzyTwNDbge//fpyjU1FQv
      vY8VYZwqhEMhAs4gg5fOUVS86IEQYYeCWcozMzOL8PgIhBqYvtDDGA6a1q7Co40QT1qEIz6i
      XpPRtBO3dvNjZHX9KkKhEKpVpCpUjgIEozXo7gB5a5ye4RKB+hCm28VsPEUoVEOwroLS8Cw1
      vpsfpJKxEYauJHD7q2gK+RkZn0YEyvE73SzmFhm+UkZFUKWvf4BAZYRyl4quQP3aRs6eO4uu
      KjQ0BpiYmCBFgKhHQy/3k8v50P///vj/ANDW19/ZQJdhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pizza Popularity' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9SXQd2Znn94s54s0DgPcwgwBIgjOZTOacqcyUlJJKqlKpuqtU7tPuPu61
      1z5e1t7H9jneuBfdZZerqu1qV7ulkkqpMWcyxRmcAYKYZ+DNc8xePJAEmGSSzEEkiPfbZCIY
      ce8X98U/7o17v+9+gu/7Pi1a7FDEJ21AixZPkpYAWuxoWgJosaNpCaDFjqYlgBY7mpYAWuxo
      WgJosaNpCaDFjqYlgBY7mpYAWuxoWgJosaNpCaDFjqYlgBY7mpYAWuxoWgJosaNpCaDFjqYl
      gBY7mpYAWuxoWgJosaNpCaDFjqYlgBY7mpYAWuxoWgJosaNpCaDFF8b3fRqNxpM247Gp1+u4
      rgu0BNBihyM/aQNabG98p4SdOfWkzXgsfNvGkSQ8UWwJoMWXw7NyWEv/8KTNeGycjf+2hkAt
      djRfaw/g+xWu/ObX3KpsPd557B0OKFe5XNjHawejj12u1ygwcfk840slgp37OXp4N8xdYrKh
      sHvfQeLql7W8wNiFDKn9/cR15cGn2WVmxy5zZWIVOdlD38Awe/oTn9+otTl+dyHDyN69dLcH
      v6yhm2ypsjB2jjMTWeRQkq7eYQ7u7kSXfUqrK2QrPqmhHgJfXY3PBF/zEMhgzyvfYqCe4cKV
      CcTIXo7uSSDrBtZSjVrDxXNtXE9AlCREUUDwfTzPxXE9RElGEkUE4XZ5Pk51idMfXMDpOcw3
      f9CJtTrLeq5KzGpQb7i4PuD7+Ph4no8gCAhCswzf9/F9D98XEEQBcaNg33PxfJrniQICKvG2
      CJq00UH6Pp7v4/sgigIIAgKAWyVvSXTve5WhlMvs5d/wd6d7+fYfv0i3IQE+nmNjuwKKqiAK
      gGdTrTVwHH/DHjbq9PGbRjTtF8Tm+b7P7cMAvmvjeAKSLCOJwt2mtuuYZoP2Q9/iSMqlMn2K
      v/mHGX78ly+jG0HCIsgbdXh3NgRvtoPgf/aYKHD3XEFAFEU21fbM8LUKQBAk9FAEXW6g6wZS
      IEQkEgHfx3QdyplFZqYUGg0TKdnPYCqK4FRYnVuk6HhIUoj27hSxgNZ8GLBZujmL17aLo/v7
      CcoQ7N5NHFjL3a3Xt4ssLpbwVAHP8tBjSdpiQZzcPAsVEV30QAmQSLahWevMrdVRVREPkVCs
      g3jQx3GaovBdm3JuhUzZQ1Z8lFCKjqjBbW2IsoIWChNJBDj4xr8gee1XXBxdJfVyGju/xvJ6
      jrorYwRCdHR3EdrUPr5fZG7SonN3BxoOhaV13HiciFBicV2lpy+GV86RN0Vi8ShSbYWpxQKe
      L6JGEqTa2whpd0exgqxghCJEIhA58j1em/iP3Ci9zFHBxXXBx6G0usha2cR1XRxk2rq60Gp5
      sqUaru/hOD6J/r0kxRLZfAkXGdeuIcf66Yqrz5wIntg3gO/ZlDIr5BsSupRj9PIs9YZDcXaU
      qws1gvEY3upNLk6uYbobbye3Ss4RCAXbCH3OyMS3CqyslbAcm8rSBJfGZ8g3akydPMVkxcI2
      q5SKBeo25G/8nvOLRRzbpFLKU6q5QI5Ln1wnU7cwa+vcOHeJuWwFq1GkULHwHpBRQRBFgukh
      gmuzFBtZJm6Ms1TXSbcZrI6f5dr81rGg68xz5r2b1AAwWbhwhclMEY86M6NnGV9YY3biBrPr
      ZVwqTJy9yJIVJBmTWb15g6mVPPb9WwC3usa6EyemuRQWZ7l5fZoqPlatQrGQZ3n2GmfPjVOw
      HKxahVKhwPrcKB+enqDi+FjVErliiYbtUMvd4uynE1TuW9f25onNAomKQdfeoxw/lAB0xmez
      4LosX7+KO/hHCJZDIOoxN7fO8aE0hqyA5+IAsih9rnKFYA+7UmNMr6zjVgssmxrVej+CIlBb
      z+HvGWJXRxRDhqyk4hVWKXUdon9XP2F9c5P41IvzFLW9vPH8bvSHvv4EBF8C16SamWex5pGK
      i1RrLsGkwuSNRcz2hze5ZPRx9HCGk+c+Runcx7G9nQTMMc7PKry8W6DhSChOnWxmlXpPEkVq
      XlfPLXH++j+xFFIIRAIYe59nIACFOyWrtA8dJNGb48rJEpGXjzPcHkNuj5HqW+PcB0VOvP0S
      w3EZnA7aajUW11doWCLVmWnyHCD8UOu3F090GlQQ7nmifDAbEuGwjCQB8SFOBEMY6sbjLuuE
      fCiZFRp+O8YDHkhz8iM+Wu7i+V3dCEaNmWUR31MZfPlVlPUGzto4n04LDO47Rt/ICV6M5rGt
      NS6duU6w5xjHBu8a5FpVLLX3ER5+wPdx7AINPUnAMlFUBVVTkGSItY9wpD2GSP5RWgYlGMFa
      XsVuH0HTFYRyHScYwZAkQKJjcDepcAJtk12KEaZzYC97kyJqKE46lcDA3SQAAJv506copZ/n
      +V3JjQegyvipy1g9h3h+IIJAg4WxGyzWRNo7u5FslbXLc3iPYPl246laBxAESPWEuGYnSPep
      gE/cclFuD7iFAD3tCh9OLbNW6KYvrjY/GO/J8pSfXSS09w16emR8OUsgWwdcpFA3QxEfxwpR
      vDpHLVPCG4zTtyuG59SRcVldX6cxqN+2CCXYhrxykxWri/RDZpdcc4WrJ6dIvPZD4sYsLEI4
      HCed0PB8H8dxkJ27AhAEFU3b+MPzcDwfH/Bdi4Ur54i/+m3U0iqzc3kO9HeRNq8jdKRJiYDj
      YIsi8iYByEaYrtRe9nZusWqLjY2ZT/h9Y5g/3pMiIAF4lMbOcVPu5huDKVQBcGus1WyCkV30
      97Tj1V2uS3MP/wG3IX8YAQgSuqEjqncHLqJsENBv/y0TDKqIkkjbwVdQfvm3/N35JKpdxdjz
      Mu8cHyIgCoBIcOAIJyof8+5P/hNaIIjTKNH36r/igKpjeAqSANFDu1n+2U/4TW+QemaFQuIA
      slTk4k/+P25p3XQbNQpegmN7DJbO/ZwPpxQGhnQKyw26j7+BTplA2EAWJSLJYfYNneS9//vv
      UFQHfc+3+dbhbgyleV/u2k3e/eV7/ExS0BJdvP3H/4L9bRICgxxLnuSXv/6vyIqK57qkj73D
      W30KwYCOLAuIQg89kY95959rhOrrrC1JHDwuUZ18n5ux7/CDwwncVYuPpmZYSR7gtTcm+S//
      4W8x2nRsM8DuF1/k6O4UEoAooagGmvTZ5pdUDT3gI9anee+9WZxQll/99DoEkoz0hpm6tkDB
      WeW3qzeQ9AhDR1+iN+xxcvw0yzMW60URzQjzOZ9d2xbhqUyS57lYtgOSjCJL95958GzqdRc1
      qPOZ39z38RwT0xXRdPXO94Lv+7hWHcuTUDUN+fYsp9OgZnooegD1Pg8Q+Li2jYuILMuIjzMV
      8nl20pzytUwbQdbQlIfNSTTPty0HUdV56OlfCg/HMrF9GV2VPztcpdmetfw4LPyvX6chXytP
      pwBabAtaAmixo/F9n0ZlHdm8+qRNeSxs20aSpObiXksALb4ovu9jmia6rj/85KeIer2OqqpN
      ETxpY1q0eJK0BNBiR/NUrQO02H74bh2ndOtJm/FY+JaJayr4rYCYFl8Wz1zFnPvfnrQZj81t
      H6rWEKjFjubBPYBjkpm9wuj0Vk8SvW2E/d0a+WyWtpERHiucxcxw4/I4S8U6ohyla3iA3nSS
      gPzoOmyszDDXkEh39xJ5EkuTboWZK5e5lTMJdfQzMjSAsnqDabWTPekE6uZbKS1yPa8x3J1A
      vc89uvnLnF4a4JUDkS9vl11ndfoqV+aKSEaMjnQfwwNtaJJPJZuhUINkbwrjy9f0TPHgJ0+U
      CbX3MzIyQtItUlXDDOwZYbg3Bo0G5UIB63FrM9eZLWr07drD7qEOzNlRPnz/HKvmoxfh1ssU
      yxWsJ+GZ5ZW49O6vGHPbOXLkIB2GSy5XwCnnyFfNz7pJixKKLMEDvOg9M8dq/rFb8f44NSql
      LEL7CHt2pdGzn/L3P79OAwFRlJGkB6yo73Ae3AMIIlq4je4wMB8gH0zS2dVNQIJSLYttVimu
      zZPN1lDDbfR2J5E9m1opw8pqHkeL0NaeIrnZcd/3QI+Q7uwiZEh0Bj28qWXyFWijRrFcwfEA
      QcIIRwnpMo1cDjes4+RK2HIQBR/brJJfvMWCKdKT6iAaD6HgUC8XWF1epSqG6Ux1EIvoCK5F
      tVymZrn4CASjCUS7jOUbxMIaUGd9uUGsM4bkWFTzayytV5HCEdrbU0T12w4MHmsXTzKXPso3
      Dw9iyNCWaAOglPOxamVyGZPiskm4t5NUPIKiGESDMqIInmtTKxWp2S6gEopt9q3xcRpVKiYE
      ggEkp8LqyjKFukS0I0V7NITql1nNWsiCRT6fQ4r1kG6LYMh3o9YESSXa0U1XGujspP6P/5GL
      +f0c1zQCgo+ESzWXoVC3m9FegkQ4EUdpVCjVTDzA8yDc3klEsqhUKlhOMypMj7QRMZ49ET24
      BxCEjXDCzbd8+2+L7MJNro4tYQt1rr37WyZMj3p+nksXrpIXQ2j56/z647GNYI+7OLUCy8tL
      LMxOcXMujy2GSQahsTTGxVsLFHJr3LxyhjMXp6h5sHj6Y86Mn+HDX59ifD6HiUNmfoqZTA3d
      XefUr37HjZyNVVxi9Owoq26YhLTAR78+zXLDpbw0zskPP2V8fpX1hStMr9aYu3WBszcyGxYt
      8v5/OUfRdymt3OLC6C3sQBB79vf87vzSnd0DoMpyNkBfKoyq3G2b2+2xfP0Co1NFfL/A+Kef
      MFkGVi/z7vkZapZLbf0mJz/4iGuzayxPTLNUqW34afo4jRKzV0cZm1/H9BvMnXuf84sQMUxu
      XjjH+HIJt3Sdn/3k15y5sYJplbh66TyTS/e0rnD7NwLfKlMhQlB2yU7f5PKFcco4FJdnuDl2
      g9GzH/LLX3/CbKFKYXmOibExrp57n3/65w+ZL/tU1+a4eWuS1WyexfGP+e0n02y/LbAezhec
      BdJIDR6l56UXaRcgtTrBWMkkmFuiZCc4FNWQoyO0X/iAycYhDm1aKHSqeVaWXGSnQN7USQ/t
      JSBBsP8Ax5RFVssmuqhRKsyTt/YAddaznXz7x2+SUKE6XaJz+BC79uwjqXq0ab/h1Nga7eEl
      GmqA3riGKOxiKPwrrszso69ao2P3cQ7u60QRALvMWO4+t2TXWF9bpKoPMGKoMDyM85OrZF/t
      JQWARcMXCfv3ewuq9B5/gxeHutCtHAGhzHp10z97LsXFW0h7v82b+8N3rreXfRr5FSZvFFkT
      kuzd1UfYHefnE0Fe+aMYCi4JaYV8ZplaD4R3v8733uwF8tjeLGrDhE1BlmYpw82lU1jTIops
      U04d5WAYypt+t64DL5LeU2Ls3FmSw/vZ39WG2tVGz94C139/Gn338xzskBHcAYZlnfVCDT+a
      xv39OBmG6f1iD8xTyxcUwMabb/OT4Hm4VgNbDGHX69hA+uAeIveM1fX2XRx7bpCQ5lJaneb6
      3Dwr0Tih1YtM2GGShgyCj++7uB5AkKHDIyTu44svAGIwhGTWaOgeOB6uWaeOj959kD6jQaPi
      o2iB5sP/eXguvlnDlgTq9TpgMHywZ1MDBYgoJmXbwvW4ExN82xLxPt6Sd/ChUaxgdIU/Ix6n
      VmR1LYPft59kUIJ8mbqu49fr1AGjvQM9Gkem0AzIfwj+hj1ypJ+XjnUTwtskAACH5ctnWVcH
      OLa/k2az1pm9eJl1fTcv7ksiYrE6dYv5XA09HGza7Dj3RBY8G3x16wCijB6IE9UU4l3dBASg
      rR3nAdMOgqQRCgaQ/VWqVpnsVJnYK4fY1x6iEIDaxPwdE2X5/j+873uUphfQu48Q8Ysonkys
      vYuEKuD7HXiuy/TKLPlChpobbQaAiAKirCDf/vZ0N3aSkBXkSJJYVSfdnUYCOtvsTQ+sRl+f
      zs8nlhjqaidpyBu7OjyCK5UgYMRCZGaWsTs77479BYFARz/7B0JcXZhgdv0Iu2Ip2t0p9M5u
      kiLguDiShFqefmg1WqSNvbtf4fktATFb30Dm4nnOZOK88dYgEbn575Xpy1yvRTnxQh+GCHhV
      lnMllNAAI/vS+PV5Fk5nH36f25CvTgCCSrIjzez4x/z0/7lMUHcp1nv4o3/75papt+LVX/Pv
      T9YRJAE5mGTkuW/wSipOtaPCP3/we7LxKnMzVYx0O/33rcdi4do5xm9cR2lkoPsbfGcwSMTu
      I/jJh/z6JzcwdBHLUjn6zg8ZGu7m1Cdn+cnEeXSvTNur/y17VJmrox/xbiZAvrLGQr0LpACp
      jjSTH33Af57QCAlViuHn+PM/PrLxlhQJDDzHS7nf8o//5yVibUEajsjQ8W9y6GFtI4okdh0j
      /tGv+U9/H0CzNXa/8yoHxGZsdLJvPwftc3x6aRT1+cO8cPgGP/vr/0S03cBqaAy9+BLHEl/B
      b1Sf5rc/P8+yHufDn8/cCYi5dfEyS1aAWnYS2YgwdPgEbVqDT8fOkll0WMk6eLbGyFdgwtPG
      I3mD+pv3jBE2/b2xP07zb4FmB+zjWA0cVDRVan4o3i2Iz6vMbVRpCDrBO2FNt8u8Gz/crMvH
      bpj4ioYqbezTs1G2bzeouhIhXdli05bz8XEsE8sV0PWNLVfuVOVhNyw8SW0GqGy2n+Y+PuBQ
      r9ooAYOtndPG/j6f+f/beNiWA6KMsmldYGMroK1t7jlYlo2oGlsCX5rt4HP3J7i9YdCmerfY
      5H+m7EfDxzEbWMgENOWOoZuLvhMPMPe/fJEKngpa7tAtvjDPggBavkAtvhSCHEZqe+tJm/FY
      uI6LKInN0UmrB2jxRWkFxLRosc1pCaDFjqb1DdDiS+F7Np5ZfNJmPB6Wie8reFIrIKbFl8Sr
      L1Kf+5+ftBmPzW0H5NYQqMWOZvv2AGaGseuzFC1n08EgPSODhNbGyXQeYyj0wKvvg0ulUqTR
      0Glra+ZR8b06K5PrhHf38VhFPRImK+PLBPYOEHHrrGfLSHqURER7+KX3wzHJLk1ya7mMpIeJ
      J9P0dsZQJagXCpQbPtF0ki9Y+jPL9u0BRJVQJEJYlygtjZP1Y8RiYTRZor54i6XH9t21KRSW
      WVgo3TnieWUmfn+N+zmPfnl87IbVdDDzPWzHxnW/xIy0XaWwNkeeGJGQhrN8lp99OIkJeK6L
      7bifuwq/U9m+PYAcpmsgSHslg5mZwOweZrirmd5nnaYrQWl9hUJDo61zI+zS97FrWRaWChjt
      PXTE9E1vAB/HsbG2hJp5mNX6HS9I16pTN208XyYQCSC5DrbrIcoqsgiuWcMUNAKqBJ6N6fjI
      soIoeDSqVWxfRNH05l6bKCQHOps/gKgRjycQpabLge/b1Mp1XEFC1XV0RQLPom6LyG6Z1fUC
      eqKHRFi5a7/vIUgKic5hhtLgdbdR+OlPuFYc5nA4TMIABQ+rXqNhb9yjIKHqKqJjYdobAhFE
      VD2AroDdaNCwHHxJJXjfvU23P9tXAEIzr5h0e0VPlJo5BQDfK3Lmn/6R2v7dhAuLXJ/fxQvP
      HyJQuMDPfrPO/leGWDzzAVPpgzx3sIc7m1T7Lla9QqnU7AU8p3on9LK+fJNzN+dRQknk6iRj
      2SF++K12xq7NoHUe4VC/wugv/obznOBf/+lxmL3ChYLB3pERKuf/K9cZpEspMbvWYPDwKxzo
      tzn9t7+h87//S0asDOfP3yTYfoBjexVGf/k7CokhIvYKCyWZkeOvsEce5f/628vEhvYz3GEy
      e/Umuw+/xqHe4NY2ESUkyUf0NXRFwsZhfeI6t1Y9Drx9gPK1M1yaL1CvFshUZY5/9x061ie4
      MbdO3SyytGrz4l/8d+wxr3NpZp1grANr5SKLxjf50zd7+NL5B58ytq8APgdBDHPiT37MNzqA
      NZVPlhQapsXih1dIv/UjeoLQ0bvGhfw6uWoXXeENBVgVlidnaNjNvfA9t8xKHfYDRnqI54Nt
      FCt1bCdKfvp9pvkLQpJMrZTDatRZ1N7gVWGC2foh9LxPQNMI6gLJF79PJJul7sRoZG9RzK3R
      6I8/wPoIh9/+FtlsEctTKFxdpLiaw+mG2KHv8eNvNgNipNFZtHoDuCsAp15maXqc8ZKAaK0z
      ox/grShUF26fYdD//Nv0HqsyfeUs8+YujvWn0frTDB6rMnvxE64OH+VEl4Lg7ef5eIFy1cSK
      HmL9d5dZe7OHnq/lF3tyPJMCABHxM183VbIlGbm6xloVcBSCRhBV8LjzKaRF6T+4mxde6ALA
      dVZ4b/oU4FFdn2dybpmaKzUjvEyLpBOgNyxxrV4mc2sNfddROrx5rt1aIY6HbiTRhRqzo5dZ
      BQTPIZMtobd/znjczTF2/iYVRQCvRi5fQU15+PDQgBi7XmZ5ZRwyCuH0Lt745m4ieFS3nOWS
      nbjMfDnBoZf6Nz6KTVbGr3Cz2ss3Xk8hYpNbnGV2aQ1LkHCtAtWGjXO/Src5z6gA7keA9qRI
      KdJDX0wEuun2JNT7JwS4B5v1hVWqYoJDR/cQwEKYuQSIRNNhnBslpmYcet/WUK0B/JM3afTF
      iLWHEZ0ZLl6v8sa/eos22eSWdY6Vz6uyPMnFJZ0f/dlRgkIe1bzygER4n8VIdHF839ufGxBj
      r13n3LTH4TcPklQAfGqLY1xZEjn48m5CGwEx84tr+ME+jh3oRmgsUL5+4RGt2F7sIAFo7Dq+
      h1+9/xN+FU8i2ybB7gMc2z9I5KEakAgFBXI3pxg1lylmXeo1GATESAfh0gUuWr0cUBV04giN
      UyzWutgXFIEYKX2JU5+ep91fY3a8QvK5js8xs514/VM+PWujVReZWoDhQ4MPPv9xMBc4+evf
      Myt2IJ98jxt6jF3pANOjF5m1oninitzQQ/Tu2UdUs7k8O4ZVukEm36D0LL7+eQbiAXzPxWrU
      8NUwtxM8OrUythbGkADHpO4KKIqKhE2lUKTuuPiCQiAYJKBrG/G9HrZt47oS+kZBvu9QLzVQ
      okEk26RcKtHwRFRZRRJ91FAUXfIwq2XqnkYkqCHgUq9WcSWDYEBFxMMs58nXnKYNgoRi6Bi6
      RKNQQ46FUT2HumkjSiqaAtVijrLpo6gq4kZ6KV12qZgy4YAMuJimgyDId3swz8W2TVwpwJZE
      l/g4pontgqqL1Io13NtJwgUJVRGxTRP3dlzzxiyQ7NUplSs4yKiygoiIEQttSZPk+z613Dhs
      w5Xg22x7ATwum2/3fml/vo5rH/e6eyPwngxbI8kemCJpmwtgBw2BmjzuQ/9VXPu4130ZG786
      Hk18gmQghg9+/eZ8hbie28wOQysgpsWXoBUQ06LFNqclgBY7mpYAWuxoWt8ALb4wz8IsUKsH
      aLGj2TbToK5tkl2aIrtlR3CBcLqfiFShVjNIpx8vbMWpZFhYyVK3PYxoO4lYlHBAefr3wLfr
      FCoNJKMZDwGAa1HKLLGYqyOqBuFIgo5kGFn0MSsVahaEEhGeRFKdp5nt0wP4HnajTr2eYfzS
      dWaWslTrNUzHIp9fZHb28QOz68uTjC+tUarVKReWGbt0npur9ac/cMQ1qVTK1DbHLthVMvNj
      3FqrU69Vyc9e5P1z81j42I06lXLtmXRm+7Jsmx5AVHTSQ4fo8NepLNpE+oYZGUgiSw6LNcD3
      qBfWyNYlkm1xDEUEfNx6ibX1EmIsSVvYQNq0uuOZNnpHP/sHOlH9KnPXrrJ8a5rO1H4ibo21
      xRUsI0VnexAJcG0bX/Co5VYpCgk6kyFkETzHxgWc4jqrlkFXR5w7PnZujdXFFexAms62wN1y
      JAnJd2iYPmpAQ3BNSpk1ik6AdDqOJol4rovnufhOjbVMnVBbG1FDASVAPCEjbnbk81wQZToG
      D3Eg7eNUY6z98mMm9v2YPaEICd1HwcNuNLAcbyP4RUJVFQTXxtqIGBMEEVnT0WRwLAvTdkBU
      MQx1G70tH51tIwBBEJBkBQkZSZSQJRlFUZBwob7OtVMXyZaHaFPXeffCfv7d90dwMrNcvHQD
      r2MXyrWTjO76Ht8Z2ZrWT5RkZEVBk8LEYgmySzUca5mPfnkRaXAvsZUPuXx1D2+9NUx+9Df8
      5kaBvr2DSKXznPX28M63D+BPfspPT8+SGNxN2MoyejbOK999hQ6W+OjdUeThvUSWP+DK1T28
      +eYw+dFRCmmY+OVl3IEX+MbraeZOn2fBidAfyPPe+1H+5L95DWXpFic/+i3FxF76kgrzvzrL
      i//mTxhorHJ9fJFgz1H2d25ahBJFJFlBUUCJddGl18k5DvnlSWayPnteHqZw5RSjcwUsq0HZ
      Fjnwxtu0r49zbXYd07Mp5asc+MG/Za91ndHpNQLRNuzVqxTS3+ePnks8cyLYNgL4XPQ29r+y
      jxde7EYgT+0fR8k7vZRW56iHD/HS7jaEIZlf/OcLFEbeInbnQg+zUiSXVVG9CjPLCzjxI1TO
      X8EfHuHgQBdy3cC9dp7rK4O0mxEOf+soBzo7kes5xi+f5sr8bvZbAv0vf4sTg2k0t8TN6xcY
      v5nFKl3H37OPg/2dSHUd99rFZjmNVc58avHKv/zX7I5JrE2N0ZA6eO21Y8RE2GX8A+9ervJO
      TCG1+wQnnj9BUoBdtX9ksgQDkk3DbKC4W12dPdukXMiQUcArTnDB3Mt3Y9BYsjDrHh46/c9/
      k/7jFos3T3N9uZOj/Sm0/hSDx20yN97j/czrvNAlI3CQVzsbmJaL3Rfg05+dZvm579H9h/5t
      v2aeDQFs5OrakqXFsbHza6yZUaanSkCdgOpSgU0CaDA7+jEzFxX0cJr9x1/ghQGdm7+1MZ0V
      5mggOQ0qQhDdNjeqam7HLioKeiSK2Nic4lJAUBTUSBQtm6dQtjC9ZWb9OpJTpyoEMBwTCLDv
      xWMMxDQEoU7Nb4DYRlhqbj+upVKYlzIQa96TIDaPP+zjvJ5b4vzZnzFjqET79vGtPzlMXPBZ
      3myf4FGcH+PmrMqRt3ajCwA2hbmrnJ1t5zvf7UEUXMprS0xPT5OpmNhWmbWy9MhxCduJZ0MA
      90OSUMJx2o12+gZiiEB/r3/PLEiAPa/9gOcHu5qu0wBYhEI6gViavv40igA+PsldNzYAACAA
      SURBVLKsszp7+5xmDoRKvoLcp3I3X6yPa5nUCwW8YA9BSycQ76SvP4Ui+PgIyIrO6rSCpoob
      zmYSGgq+V6HuQVgEq1ghkIwAW3M0P4xgahdvHr43IGbrY+sUpjh/ZZ3+b7xNSm3abGamuHCj
      xoHXXyC6ERAzMzWLafTz6ok+RHOB9+dbATHbC9kg1paGS5c5V4tiCCZVpZeXXhx6SGC3SnpX
      ipkr45zLrRKUXDw5zOC+I0CB6SujVGcTuJUcdqCHIx0aFEyWbl7mXGYWoVGgIrZxcHcbyXia
      2StjnMutEJRcfDnCrn2H76lPIZFsY2XpGqMXoE0pMT2rcugbUcg9ngAeirXGxfdPcsvuInDt
      LBktTHdSZ270HHNWEv3aRdY0g1RfH4bqs7y+yM0rK+QLZQrP6BTSNlwJNsmvVZFDIUIBtRmA
      Uq9imiqxmA5YZJfLhDsTyFadXHaNQtlBlAQEI0lvV+yO6u1ynrJoEA3oSFsS/pnkV1bJ100c
      ZAJGkHh7B9nTv2UyFKMrEENRVULJNO1hldKVDzhZjTCYCKEoGoFYB6m4geiZ5FZWKNStLeWI
      5Rx2MEhI05oflZ5NOZ8hV7bAd3DVJP3dMbxajbpto0ejqICZXaYW7iQu1MiV68iBGJFN6wC1
      ahlbTRLd4pzp0SiXm+sAMZns3DqWLDfvV9YIGzLVUgnbF5FEAUFSCMWS6HaB1VwJXxQBGclX
      SPZvzTT/LKwEb0MBPC4+vufjC0LT//sxVrl8z8NHuBOMPvfJJ+SGBtmXSqMK4p2yilc+5rI+
      xPMDKTRZ4t7Y9XvL+Tw7PWiO+594TMBGu220WSsgZtty9yPysa8UxS3Xte/fTzQQQLnneKD/
      APulAOp9Hv77lfN5dj49m089WrsJogzq58Q4P4X4vrch6FZATIsvQSsgpkWLbU5LAC12NC0B
      tNjR7ICP4BZfJ15tgdrN//CkzXgsfN/H3JjVagmgxZfC920w1560GY/N7ZmfJyoAzzEpF3KU
      G+7dg6KEEY5hYOMKCsGQ8ejjNKtKJl+iYW8qT9KIxKKIlSJePE5EfrRbNkt5LD1C+N69Qz2b
      cj5HseGiGCFikTBiPU9ZDHx2Qc2qkrckIgEN6T7zo56ZZb0WJhX/CjYd9xxq5Ty5sokoa+iB
      ENGQjiSy4QLto4UCrTfePTzR9vDtOrmVWeZzVTKTywi9nSQDIZK9MoHCMhU5yp59/Y+e1scq
      s7QwS6FikpkZR+geIRmM0j+s0zh7lsYbb3Ak9GhRY5WVWQodI1sF4Jus3LzGVLYOkoSoRejp
      7Se8fI1r+jAnBjvv5CgAoJ5hNmOwr7/tvgJw81c4desgP3qt7VHv8MFYFVYmznEpG6QjHiIo
      2ViBAZ7b10ajVCBb9eloCeAzPNH2ELUIvXuP0eWVOD9dRDx0lGOxEKLksVAA8LErOTI1gfbk
      7SCTZpDLer6BnkgQ0ze5twXaGTkUx3NcLi5eRTj0IsdiApIsMwOAR72UoWypxOJhVEkAPGzT
      xPZAkhRUVUYAgh09yMZW17nqwnUuz1XoP3yMoXaDRrWCI9ztnxyzyFrBJtieIKiIoCfoaZOQ
      Nx5+393Yv1NQ0JR7mt53sR0fSZIQBDDLGQo1kXAiTlAVwXOwXAHRa1AsVVFCCUKGfLd39BwQ
      ZTpHXuRY2sPKz/Hx+6eY6f8hfeEICR1UPBzLwna95raHgoSiyAiecyeFkiCIyKqKIgm4toXl
      uCAoaLryTM6YPFEBCKKILGrIqMiShKSqaJoGNMDOMTZ6jfX8ICG5zMVLvXzz23tg5RaXJlfR
      k+3YV08hHP4hz6c3fhqxud25J7nIkoioamh3uo8co7/5FcWeIcRqGTHUzeHjw9RunOJ6yaAt
      IJAvFInveoEDvUGy4xdY6X+V4+nbCShMlqfzhHbtZaAjhCwKhCJNx+oiJrPnPqS4OkhKsKnd
      lNjz8kt0Fmc4vxDm9YO9yFaGq2fOkDO6idsekQN76L3TEi75mTFmGwaDQ7uQFj/m/ekwwymP
      W9Mz9I4cpl+a4Jfv3kBO9tARqpGzA+zef5RdyU39oyghb9yzlt7DoH6SddMjXlxiMe8xcKyf
      8th5ri2VsG2TmiOx+8RLJHLTTCxmMT2HaqnB7rf/lEF7khsLGbRgHDt3i2r7m7yxP/rMieDp
      7RGlMP0j7Qzt30UAh0u/eJ81p4PKSh41OsjIYBtuR53ffniFAz86ssVJ6/6EGT7xPEcSSez1
      OaZWcxQakNp1lOOeiCK6rEyOsTAzTbn3IPXsCvnUZhfIMpmqRFTV7rzR7yKT2vccRwZ7CLsF
      5iausZSHTqvASl7EcV3qy9dYUvbz+uFOFB9EXUPKAHhUVya5PpchsfcEQWWJ9864HP3+PjoU
      C+HiDbKrS3S0l6iE9vH9FwdQpSJXri9i5WqQvN8A0cNav8KFYjdvRXyspTLFvIeDSvvuo7w0
      YJFbuMiFiSj9HXGCyQDxAZf6/If87NY+didkdH+Ag/EeRFHGrsmc+tUF1ve/ReqL/6JPJU+v
      AEQFIxQiFAygeh66YONWS5SyS6yKEpK7ju9V8ApVshx5hNQ9CqFYlFBAp6FryBJ4votVyXD9
      ymUWixbVbBU9vY+R+16voqsCvrCxa/IWDUjowTCRYADdaqCpAqVNwVq+51OYXyV54C0iwbv+
      Nbbvkb91gU8KdcIHvsXelIGYv8J0tUHH5DhZoJxbx1QiWHFQAhGi4QBgosoygr81Iqy0OM7P
      fnGBD1SNxPAxvvcXb5OWYOVuo6IaAZzaIpPjPi/80XPE1KaToFe9wXvXE/zozw4QkHysYomZ
      G1eYWi1iWlWya5EHtMv25ukVwP2QFfRQgq5YH4PdBgIwPCx+8dy3foYzH9wg9ebb/Fm7xsrY
      VcYXHhT3FCQVsbi4mmegM0lIEXlUNypBAFkTqRbq+KnAXe0IIqF0P/1tSyxlVimlDaJqgGgI
      ugeHmtFag0PNoVzl/EPriXTv5Y+f+/yAGLe6zOjJcdJvf58eTQB87NICZ36/yv53XiMhCeBX
      uHV9nLI+yLd+MIBsLfL+3z28/u3I9hKAESMRCTC9OMGUHUP1TGyjmz3hwBfb78YTkIMi5dVV
      ZooV5mfWqYuxB5wskdo7TOD0BOfPlkhGdRxPIN65iwddcQdBJNY7hHX1NKNWCtWVSAz1kgSU
      UDvD+9rwb1zjypjI4X097It+ytUbt2gPKbimQKSnh+6vYvBt5xk/+QHX3D5eWRrnxrpBW0Rl
      6dJp5kgTW5hkbE0n0RFHUkXMSoHlmTFKxTzlZzQgRvqrv/qrv3rSRoCArBpEOxIE5eY8oiQr
      BENhAoZGM3ZDI5zsIBnQcL0GjYYDgo8YTNIeM7a6EQsgqzrRthTBDYmLikIwHicoSSA2hwKh
      cBvthkXR9JEFD8mI09mTJhkLoSkqoUQ7Ue3uO0LQoqQiUKw08FwPT5QJRhLEQgZaOEpEVxFF
      AVExCIaihHQFLRijIxpAD8aJyHXKdQ88kWAyRlg30ANR2pIRokEdH4lgKEEqrVHOVvFw8USN
      cDRKOBhANyIkIyogIkka4XAIw9iwT9hU7z3LCqKkYEQiREMSlapKqiOELAggKRiajCsFSESD
      qJKIIMoY4TbaghKW6+D5Hr4YJNXTRSod/0xva9czkD/1FT4Lf1i2qTu0j+u4IEr3nV9//LIc
      fFG+z8ftA67wPVzXQ5Tk+/r/f86FeJ4HgvgQX3sff+NcQXzMOr4y/Oa+RGxEij0wIGYMpv6n
      J2DfV8P2GgLdoTm3/9WV9XgDKEEQkeUvMCbZSO79KDYJgoAkPclJR6Ep8CdowR+CbdoDtHga
      uB0Qo2lfeBriidBoNFBVFVEUt2sP0OJp4snHL38xBEF45nu4Fi0+l1YP0OJLYa+tkf/Fz5+0
      GY+F4zgbPldCSwAtvhxOIU/un376pM34wrSGQC12NE+uB3BN1mcucfriHDWrRsNX0FWFYGQ3
      x47GycwvE93/Iv2BxynTorgyxeiVcXINkXjPPg7t7ycZ2H55UTzXxTZNpMAj+vCbZaavfMKp
      ySrBaIJ0qpuBXX10xFTKy0uslz069/QTfHhJO4onJwBRJdF3mLdS+ymN/ZaT1d28dqifsK4g
      lFdpOkra1CsWaDqG0pw/9z0Hs9HAQcUwlC0JL+zMZX53tsHR17/N62GPldVVCvkayUAU8HAa
      dWq2gBE0UEQBfA/XB8GzqNc9lICxESPg47o+Ag6NuoWkB1BlEQEfz/UR7ly7MVfvWtRqJoIW
      IHA7gGZjsczzQZQ2Fux8D9fz8Dx/YxFNQBCaC16e6+ELIpLU3ESrls0wdukyHW++SacgIksb
      CT8ct7nLnHTPIqBr4gkSA89/lyMpl9riKL/8xSLf+fM3iYajJFQfZWNxy/Vuz3wLiJKI4Hv3
      HJOQRO6eK4jIsvT0p476Ajw5AQgCkqITVMAxVBRXJxgMEdSgUXap5pZYvxmkKLiYpkvfsefo
      kGqsLc2zWnDQJIey0sVze9rvjOOcSgknkCCkq4iqTFfv7egvl8LsGFM5B1HwEVWdVN9uUnKW
      8RuLmKqKVDPxDIPOgT2kQhWmLk1SkXVUp44pa7T37qEn7rE8tUagzWNqPEuoZ5CBhMvi/Ao1
      R0J26wjpA+xtg8zSItmKg6oKVEyD3SNprMwSS2s1VEOm1lDo392N7pZZnFnCVgJQL+PEehlK
      a6xMjzG7tETxyhWK0U6GemMUZ6coEUT261hCkM7eHmL63VGsIMlogRChEIT2vs7zV/+aqco3
      OOhUqVR9jKRBeX6S+Xwd13EwfYmuoWGC5VWWcxVs38Nq2HQeOEHKz7CUKYCk4dZzeIn97O00
      njkRPLXfAL7vI8gGiXQ7seI1Rlc9qrk15mZWkRMpOhIB8tfOMde4e42e3s/eaJnR99/l/TNj
      LJetZvBzaZaLE2t4RpLuzhh2donpqWVMc42J2SyuEKa9M4aTW2RycgWTEhMTyzi+RjLdjlRZ
      Z/rWNBXPZOHGOT49N0lDVNEUh9X5OZazLvHOThKGza3z1ynUc8zPz5ExFQxDQxEBu8r6/E3m
      yzKGoaPeWUkWECUF3TAwtDLXL05RNj0UVUdVFDTDQNeUjX1IRVTDwNBcVudnWFgu4d7bcAB4
      OKV5Zs022g2Pytoys1NL1BGQVB1D13Dry0xN5fClZhCNbhjItWkuT9eQNgKbJVlFNwxUqcrN
      0zd4/CxsTz9P6SyQSDDZRffQED1B8HI6l6o2hcYK66smejrHOhCoj3Nj9XsM9DevEoIpDh7W
      SS6tUSzluPbpe6zue53h+gKNxC5eGOwmqPiItQY3F+YoOhGUZD8ju7oJ6QKq5TK9ukKVDgh3
      s2+ol1BIIezbjC9mKFlpcGViA/s5MdyJYq9z/maWmh2nklkDL4C/PMqS1YfqVZmYmSYSPsjw
      YBu6UEeRPHLzEyzGD7O3P01IlkE0CKgmY+NXaTg5FqYNKt5B2vuG6c1V6Ni3j66NVpHaDC5c
      ukLFrrG4ZCElq7jE7jgCVlen+eDU/8EVQyWS6mLwxMv06ZC9064Ksa5dhJPrnJue58jrL9EX
      CyHFQsSTi3w4EeO1b79MT1jCt8PIq4vcmp6iYZXIzhcp8dzDPV+3GU+pAJpBGlv7Wx9PEtFC
      SdpizR898saPkJNbr5OMGN2DUTqdOuHxMeZnbpFP2AiiyMY2x0iigix5eMKWSzdq9e7JEtm8
      BjbiaNUY3Z0xFAHwPVA0wsEk8Vjz8/L4d75NOBRHfe4bdFbKFFdv8k9/d4FX/807dI28xjvd
      JcqZWX77/15i3w/fJFW5zrnLPodff4GQuEhxbh64j3eKdYtf/vMsh7//AgmpyLUztxDv8WIx
      El0c7z3BoQ4BSTUIhQyUz+SGtJj84H3sA99lpDO8IZ4yl353icDRlxnpCCBQZ/ryZZbdMCPP
      nUCxV/n97A08nj2e2iHQZ1GJaklCgTI1UUPXNTQjgLrpIbarBTLr6+SLJaq1Gg3XaQ6jurvw
      suvk8kVq1RxrpQyu0kNcAs+qUS6XKOZWmFubpap3N99ydp1ypUypsMbc0iJlp424DrApFZMa
      IWEEENw6qBq6pqKrOoLgYNk2kh4hteswz3VVWCx4WJaJoIZI9u7nWK/LetnFrRZxEynCsgBe
      86PZB0TBx3XrFDJFyjUTt5ChkugkoUoIvofn+5+RiahohONttLUliUcCzQ/9zXgWmdF3Oekf
      4mAc6rUqZqPG4pkPmQj3MRASqVUqNMwaJU8koEcJygK+6z2TDz88JT2AHGqnQwpw2/lR1HTC
      0SjGbXmG0qRFkUiqg471Ra598gHjhkijGuaF771JZOM0wcpw+dQoecFAl0CQYhx4eRfBqMRr
      vSd5/+JVumMehbLEyMt9aM516ks3OVtfRBI91NAunj/ehcQ8ZGc4ezaHJIIc6ODwC0MEhTrR
      jjj6bUMFg96hTjJnLnP642kUycXT9/DSi0kWrl1kpREhppZY8/fwWqjB8rXzjGc0EiGXbD3N
      80mNgDFE9OYoZ89HcL0aYiyOLouoqkYsoXDxo49Z6d/L8ZE97OMDPr1YRDez5MwIe8L63U5S
      UgmEE7if8UsT0EIR4o6PYq9xccqnLTjPuTOLoEcZSAdZzIPmLDB6YQVJC9K79wj9SY0L0xNc
      KjrkKyJaV8cjxF1vP7alN6jnWNieiKpI93XE8mwTy5fR79nUyrNNTBcUVUMWgeJVfnFZ47Wj
      3aiatun8eX7xiyxvvLYbWdNQtYe5BTe3G/FEDVUWNh2zsT0RXZM37PRxbRvLBVVVNqYxm/EI
      jguyorDFA9p3sW0XJLk5Deq7WKaNqOrND+uvFR/XtnB86YHt7Ps+hSuXWfof/4ev25ivjaei
      B3hcRFn93DhgUdG43471oqKxZasfNUZPh4Kq6ejq5icqQHe3h6JpaNqjNJGIrN5bo4isavc0
      sICkqFtt2IhHkO5XjSChbBaxIKHpf6gUGgKSoj1FCTu+HrZlD/CV4dk0bAFVlbamWMWl0fBQ
      VfkhaY12Ns2IsBze1OSTNuWxsCwLWVYQxVaGmBZfglaGmBYttjktAbTY0WzLj+AWTw9OPk/2
      zOknbcZjYdtO07mvFRDT4stir6+x8u//9ydtxhemNQRqsaN5aA9g5ea5dPkS8znr7kE9xvDB
      43Rkp8h1djKcTvM4OU5832bx8sdcnCwhJ3o5cGg/PQnjgRtA+d4ql89U2fPS4FewGmmyuDhJ
      JpPkyJEH7XXsUc9McOb34+R9hZ6RExwcbOMPNgX/RbCrLIyd48xEFjmUpKt3mIO7O9Fln9Lq
      CtmKT2qoh8eJL9oJPFQAcjTNgRMx9rp5Tv31B7T/uz9ltyCiagaZhTqW4+C5zdVNWZHvzKf7
      noNtuwhyM9nCXVwWf/f3fBz7Dj/6QTt29hYz2TUigX6ietPhzPdcPF9EksVmeYJBW4eEBHc2
      pPV9F8fxkRR5IyjGx/eaO6r5goC4KTu773vN44hIoofjWJgNB8+xcXwBWd66DlCfOclPr8m8
      /to7pNQas/OLzK8F2J028PwNnzruuqw1XeVA8F1se8OmjVVez9vwpfP9ZiCLuJEow/EQFaW5
      G91tvx5/Y5c6qblLnec6eL6AtGGf7/v4ro3jNTcG2xIQY9cxzQbth77FkZRLZfoUf/MPM/z4
      L19GN4KERZA32sjz71ouNOfCP3OsGb+zcfye9nyWeKgAREkhEFQAG0NWCEQid3xvwKawusiC
      XaVScgjHU/T0tqGYBZaW1yjVXBTdINLRQyp8u6oqCzMCg3+eRFNl9M4RDm3sZuwX5ri68v+3
      d57dcVxpfv9V7OqIzsiBSCSYRIqkwoyk0UiTdnYne2fPsX2Oz/oL+JXtFz7+HPYLr1+sw9pe
      z+zsaLTWzHAURhQpCowAiUzk2OhG566u7BcNggBFakhlUPidwwOgWX3r1q371A31/J/HwS+a
      1OsCTS0ttCSbUAR3J4OJUciykd/CFQTKZRNfIEFXbyuSXmSrUMT2ZFyrhtDURUdcxdFLZDbz
      WMgIrke0PQmOQTG7xsJciaphIzZ1MdTZtHODi5ky4XQv4YCKrGr0HY5vVz3DfEmlM92EItiU
      CjlqboTWiMHS0ha26KDnDdR4jHRLG1FNZ3XVIBnQmd+sE0m1kdbqZDYybNU8VE0m1tpHylcn
      t5GhoDu4egXdkwmGAwiWTq0mkuzuIN0UxC2vMbdSwPFE1Eic5lSSkG+XIEZW8IciRCIQeerP
      eGH6bxgvPc8pwcFxwMOmtLFCpmzgOA42Msm2Nny1PLlSDcfzsG2XePdhEmKJXL6Eg4xj1ZCj
      3bTF1CfOCD7hGsAgv75GVpcJqQYLN2+ybtZZn5lgcrlGU0sKNie5ObpAbec7IfrOtZG9doUP
      rowynyliOttP9ZUPePPmOnVRQ7Y2GB2ZYrNo4rorXD4/SQ0oLc9xa/QGSxWPUFhi8YNLLOhg
      1cpsFYrolo1euMMHF6aouAYbC5PcHl+gpJvUi1mKFmDXKWYzFAyJkFLg6qUJ9F1XFevuJaJv
      cP3yB9y6s0LJ2PaFzE3x7tgKuuWCU2d1YZzbswXQl7l65TZLOY9gWGBjapSJuSwmOW6+P8zo
      9VvMrOao6mXW5qeZXtGJpuOweYvhkQ0sq8j81Ci3ZrLgD+JOv8X5kTUqnoKTX+XO4ho1t8T0
      8HVWzCCJqMzG1Diz63keHMzdw6lm2LRjRH0OhZUFpsbmqOJh1ioUC3nWFm4zfGWSgmlvf1Zg
      c+E671yepmJ7mNUSW8USdcumtjXD8KVpKp+ss3wp+YS7QCF6Th7laEcHUrWIs3WZanmL7GqF
      QDyCXa1BOI03PkbG6KPHByCSPPENzs6OMZsps3j7GpvNfQwNdBIQBDpOfp0T/YDTRPW9aWrV
      Kl5k9zn9tA2cpG/oMGHPQZgfY8uEQCxFslZlZXMdwxKpzt1hq54kX3ZoPnyGYz2hbWvXWVAj
      dB7p59TxdgSSzI/coAY782Nf8yDnVD/jU2tUNu5wfX2VnuOn6f6IlvC1DXHueC9BH4QEmfnN
      FWokwDIRW5/he0ebkSvLvH+ngOvrxtXrKKkWKm/fIn/qOEq0jaHEEQY7A1h6mnnleZ4ahIpU
      5XbdxSotcHVB4fkBgbotodg6uewGekeCbbk0+tYqV8deYy0s4w8H8A+epScAhZ1aqqT6jhPv
      3GL0vTKR55+mPxVFTkVp7spw5e0i5155jv6YDHaaZK3GyuY6dVOkOj9HnmOEP1mH+dLxibdB
      BYG9whXbxJFVQqqvkfcrnGDwdIzYrrFGEFWa+58idcikvDbJxel18qnU3gWaJKMA3ocEKju6
      ll26EYO16QkWiy6p9nZUz8+aMI1jmTiei6Sqe4c6QdiZxz8YES3WzalnOrGqm0yMTbAys0Zr
      6tEaRBJlRMFp+NAH2xjojjUa2rERRAHJ70eSJCSxlae/Jj7awtTUsYMR/JIESKR7B2gOx/Ht
      ugjFH6a1Z5DBhIgaitHSHMePs8sAACyWLl+k1HKWs4cS2x2gyuTFEcyOE5ztiSBQZ3linJWa
      SKq1HclSyYwsPpGagE//PYA/SlRYRgqFSLYkkT0P17Lxds5kUS27aGHfdox7P7Jk4NzXulZu
      lXXbYVAJ/Ol5mquzWTPQQt30dDQjWAKj0jQEQoiWRSWTwWzt2COe+ShMXQdFQZFl1ECIUFih
      kHcRFRnf9mKwEb7c/pBxelaNbHGFEl2EACSJnXgKgRCqEsKnaKRbEoiAEzfhUdS2kTZajDGE
      dAvNImDbWKKIvOuaZH+YtubDHN6TIWavarg+f4H36338YKCZgATgUpq4wpTczjd6mxtt5NTI
      1CyCkUN0d6RwdYcxafHRGm+f8RgGIOFvCu/JxCJrWiNXFTSSTmgBHKmJ/qeSnP/dH7g9LCO5
      Nr70aV5+dWhnqzR79e/5hzGb1pRG3ZDoPvEczUkNL+sy+oe/Q7gFNSvAwNPP0Zb2I3gqoaZG
      wmxJVVHlu/75Aoo/iE8O0xoWuDh+mcyyQ64EciCEIsc5frSLdy9c5BfjIFkeh3/0Y5KyusvN
      WcR/XzJuY+Mm/3R+lHo4gubZ4Ovhhe92Iik+2nJv8/bFNYS1OZaEOEePb4sKJy/yjyvXEQUb
      NXyYl77Vg8IawaCKeLdwOcGRngxvXTjP2A0Z1a3idb7MXzwbQvX5doTyghraldhDRXMVJLmd
      F166wy/+y3/Dn9SwjAADzz7LqYHmhsuyKKGofnwP2KqVVB+a30XU53jzzQXsUI7f/nocAgmO
      dIaZvb1Mwd7g/MY4khah79RzdIZd3pu8zNq8yWZRxOcPf7wsPF9yPkNvUBdL13GVIB92qffw
      XAfTtBBV/464wx37e37Jz/hhrwGyb1fkhEfBwzYNLE/Cp8ofcm82dRvRpz5yEgwA26hhixra
      bvWJa6HrJqIWvNfZiqO8PqLx0qk2JFUj8KBeuAcHU7dA2S2geRQ8XNfBMu3PQRTjbrenjKbK
      Hy2I+fcHgpgHIKL4HxaHTEAQZXzafacPNtMiiKjax3ndJSCr2kMuSEL1P/5bLNn3gKhsooI/
      eN+zUA6RiqkoPv99wpqH8fHqAwLig9rtM0FEVv1PvK/Ml0oP4BllKoQJ7698C+AYVA0Bv6Z8
      pQQ0nudRXV/H2HfOcBayJCGI4pfLAA7YXxwIYg44YJ9zYAAHfKU5mAId8LG5J4qf/aKr8lg0
      RPHyQZK8Az45xsoyq//xP3zR1fjYHEyBDvhKs89GAIPswgyT02u7vDdFgrF2Bgea2Fiv09zS
      TiLyeO8sPc9D31pifGyKImHaewc51BLdTpZxP2VGXrtG7AffoPMh5VU2NtgoFkkNDhJ5yDGf
      OpbOxvwtRheKSIEo6eYu+nuS+CSPSi5LoQaJzuYnMrzhJ2GfjQAywXgrfUeOcCRcZKwc5ciR
      wxzqaiaITr5QoW4+vsuWW53m969dRe45ycmBZqxKCb1+f1Tlu1jkFtaokBTPIwAAF6RJREFU
      fkR5tq5TLhYf4qr8GWHXqBRzCKkjDPa0oOUu8T9+M0Z9++WZJD2ZGV4+KftsBBDRQjG0UAzq
      AcRSgvb27ej5tTyurVMpbrGQ26Dua6W1NUVEBaNWJru2Qs7x055O0xQN7nIiq3H1H96l9Yf/
      mpOxxieJZgAXvbxFpWbjApIaIBIJsjtSoedY1CplaqaN57gI/iYSTX7AxapXyC7NsKFLxBMp
      UokQglmnZhh4eNTKBloiSUiok9tYJ1dxCMbSNCfDqKJLJb+F7gggyPjDYYKaglcvsbG+RkGX
      aEo3k2oK3XOl8DwESaUp1U5bK9Daiv5//4br+aOc8fkICB4SDtWtHEXdxHU9XEEmEo8i1yuU
      agYu4LoQTrUSkUwqlQqm3VCFaZEkEf+TZ0T7bAQQEITtf3c/2fW3mZ3j+s1JCo6P4tzbvDua
      x9U3GbsyzExZpTlYZvi3bzNd3uUhaS1xxzvKifiusgUBQdBZuHmduY08uZVJPrg8zMx6bY9L
      sF3JMz8zzsJaltzaGL9//RJZG8Agu7rA0kYV0VjmnX96kzsVD3NrlbFr7/LHdy9w6eptNqom
      G1OXuTKZRwt5zF+7zK2lAkZljjf/3yWWcjmWp+6wuL6Fic7ilbe4ugIRv8HUtStM3p8hRmDH
      1dszy1SIEJQdcnNTjFybpIxNcW2OyfFxbgy/wxu/e5f5QpXC2iLTExPcuvIWv379HZbKHtXM
      IlMzd1jP5VmZfJfzF+ao8+Sxz0aAj8bXPMSLfYO0JxXyrQbFK0Uqqzlygo/2RBjkID1dk4xP
      5Bl6Jtn4kqFTVX0PCLYbYuDpUywuZ6jbGq6xSXGzgNN+bxatROIc6utnYzNP3W4hWnqT2cor
      HMFPa+8xOs8+RQJod/4Xb8zodLW46GWD8OALPNOXRnHLXB5ZJv7CdwmocChhcHG1QH+wiu0L
      oalR2k/1Egn4EOtjvD8d5Gvfj6LgEJPWKWTXqLU1Ed4elYxSlqnVi5hzIopsUW5+iuNhKN9r
      IdqOPUvLYImJK8PE+49ytC2J2pak43CBsfcvow2c5XhaRnB66Jc1Ngs1hGgLzqVJsvQ/dN2z
      X3miDOBBHouG7iG6Jo6to7seYnyAvt3uqf4YydoUORdSu8dDe52r783g60igCiC4XiPD484B
      HtXcOjN35nCCSfySgCBY2A9YOmjhMM6mCYiEm9tJtKXRJAHHrVGp+0i4OroONHXSK4bwRdOc
      GXTYqm4xO7qAkuqhv6mMrml4uo4O+JMp/NHYh26gh4fnCciRbp473U4Id5cBANisjw6zqfZw
      +mjrtou6zsL1ETa1AZ4dSiBisjE3w1Kuhi8cbAiPbPsh+cj2N0+UATyIUERFqMZoirfSEhTx
      vDYcd1dPl1o42f5HLowV+NHxKCLgui5CcYHJWoyfHx7CRx4jq983BbApF/NUjRBHzxwhKruY
      N87f19kATBYni7ScCgF5JFHacZgThAjplIcbbKU9KgJp0raKKkDHyTN0WHWKd65yM1+gOdlM
      yplFa20nIQLNLdiSxG7nU18kyeGBr3N2jyBm76aAsXKVy5sxXvpmLxG58f+VuRHGak2ce6ar
      kZTErbKWK6GEehgaasHTl1i5nONJ5Ik3AK3tEG1Lb/HWbybwaxqWYTHw0g8413l3q9RH1wvf
      YvHXf8d/Ho6SUOrYyaN861wbzbnf8vrbWQLlReazfo6dPrSrZImwX6aSvcUfz69hlh3qGYMe
      AKHK8uT73JpfQqxkkbpf4gfNMmzurZsgaXQOdfKH1/6WiXAMdJ3UqW/ztegCv3x7nnR3G052
      A7W3jUCwg2dOjvHaf/2fNKX8mHUffc8+x+m7gphHQZ/j/G+usqbFeOc38zuCmJnrI6yaAWq5
      O8j+CH0nz5H01bk0MUx2xWY9Z+NaPo58slvxpWT/ukJsx9LZmfbsypklNELtNH5nWzrsGFQN
      8Ad8iOydLjWawMMxTSxPxOdTthfZNnrFQPLv2v25W+D2T9c2qVsuPp9vO07P3QNcrLrVkFZK
      4t5KIeyKFQS4DoZpISq+nRhKnmtT1w0EVcOnSI2kgXh4rr1XSHR3Q2Dn+rfLvnd1fLw77GEb
      dUxk/HfbY9fmw912y4+OsPrv/u3HOcGXgv07Atx3M+7/e3cnEABkjdBDrlbYVvbLvvsFNQqB
      8ANeqgn3fkqKj/v1MY0DHiB6uX+NcrfOkozmvy+XjKQQCN1fsIAgKWj+B9VJeMgW5f0G8agI
      KFrgiZRB7mb/GsABXwrkaIz4D3/0RVfjsXBsG1FqRIfev1OgA75wDgQxBxywzzkwgAO+0hys
      AQ74RLimiZHbX+8ILMMARTkQxBzwyanPz+3rbdCDKdABX2k+xRHAoVpYZW5ydY+vvOKL0T3Q
      ilnMI2gttMQfJ5cMlFcnmMkHGDrWtSv7u8769B1WSHNmIP1oBVUXuL4S4fRghEopT6WqkGxt
      enKGQNsgt3qHmbUykhYmlmihszWKKoFeKFCuezS1JB7g9PfV5lMcAQQk2U8oGiXqbjK2UkEJ
      RIhEgiieTi6bYav8MJHJw8lN3mFy5F1mdltVeYmbt67xzpXlRy/I2GBmuQx4uI6FbTUSbrA6
      zLuz+p/48j7AqlLILJInSiTkw14b5rV37mAAruPsJBg5YC+f4gNQwBeM09Ufw1vJ8kE1RPeh
      PqJ+GdHKNg5xTbZW1iiKKTpbI42Tuzbl7BqrZYH2jlZC98XVtOsihw7LTE2UOX6mEZ2+sLiK
      2KRhVe7eUhejlGM1UyaQbiMV1rbzjTXihRqGiaebuB6AiD8YQ/aJCJZBNbfCYqWTUtJGUrVG
      dDdHJ7O8TEFI0NsVR8bDtmw8QUTGomo2osC5loWoSNh1C0FVUSQRq1am7gjIqg9Na4Rlt3Ud
      TxUob2aoemHS6Sg+qZHyqF5eY3XDoKm1k0RI3o48bVEr6ziChKppaIoEroluichOmY3NAlq8
      g3hYufcE81wESSHe2k9fC7jtSQr/+CtuF/s5GQ4T94OCi6nXqFvbDnKChKqpiLaJcfeBIDSC
      HGsKWPU6ddPGk1SCQe3RfY72EZ+qAQiCgCABooAgiIiiiCSJYIGRmWb4g0WGjvcQLLzFhdmf
      8C+f9TF78yozRT+Dh1TO/+1lBv/FTzga2DswqX2naPr9DbZOvUicPHO5AN2pJsYygGezNX+b
      q+MbtAz2snz+V4ye+A6v9gZZnxzm/dEM8b5e/Nkp8rQCBquzN5ldivLUCY+R23MsFAzOZ0Kk
      Dz3F030iNy7cxG4eoEe9yv/532G+87NTlMbG2CpuMDufhZZTvHK2jflL58kG/OQWJU59/0VS
      yxe5UIjRF7FZWC7Qcvgspw83M/6r/8S7dHC0vw9n5QZT7Ud49ul+nLk3eX3Ez7mnYly/8Afi
      /Wc51acw8sYfKMT7iFjrLJdkjpz5GoPyDf72v48Q7T1Kf9pg4dY0Aye/zonOXfFXBQFRlJAk
      D9HzoSkSFjab02PMbLgce+UY5dsfcHOpgF4tkK3KnPned0hvTjO+uIluFFndsHj253/NoDHG
      zflNgtE05vp1Vvyv8uOXOx4rGeJ+4HObAqupfl7sP8qxniCuqzH/ywxGzke2Uqdl4CniEYEX
      n53htStbHH0puee7gtBCX/MoE+sW55QNasEALWEbCXDrZTY3FhE7nqUr5aPr+W5+8fYcessh
      NjfyHHrlB5xKKbBlsnBjr2eL1jLEy2fn2Ky+xE+fCgEOG6NXsZuSHOpMERbjnF79DTcWj9Pr
      FFnIyJz985/SEw9i5DOUiiWUQ8/x4xe7CcrgJb7JK9kcFdOFQoXN0joVuxlRbueVn/2cIREq
      cZkx3cN08tx4t8ipH58jLXooW5vMF9coWsc5+cq3yOWKmK5C4dYKxY0t7HaIHv8z/urVTiCP
      dGMBn14H7hmArZdZnZ9ksiQgWpvM+47xzSao7swU/XSffYXO01XmRodZMg5xursFX3cLvaer
      LFy/wK3+U5xrUxDco5yNFShXDczoCTbPj5B5uYOOz7CPfBF8bgZwV2q4G9NwqFfKeJVNMnXw
      hGbagg9YJwgCsZ5OZmbnWEkZBLQg4WAj65jruOilEqZcJJMBUOlM+KjZAo7tI5V8HHcui1rd
      xKw4FLcy1D0Pp6mLqGyB0ETfUJy2eHB7eiXRlOwkNdi9HcvfITN+jZmKjIxLcSuPrqZ2pl3C
      h1ZbebJ1hXQ2QwawJRm/L4RkbzFxc4qKLIBbYytfQW1uZMn5U4F3Lb3M2vokbCqEWg7x0rcG
      iODeJ+B3yE2PsFSOc+K57u1FscH65ChT1U6+8WIzIhZbKwssrGYwBQnHLFCtWzz+Cu7Lzxe6
      CaJqCv6mOKFEO11NEtBBm/OgmaaA1tRNSr/IROkQPc1pAtIWAKIsEYgmCIUSdHYFEYCWNgfF
      1kGoUyl7EBHAcx+a4sey7t5ahWDQh19QSbV2ElXA89rwBIm1gtSIKLzTBxupkOSdFiwzeX2F
      5p/8lMNBgXWfybjxUVcfIxV28bV20aUAXjsOMr7aTa6vaPzkp6cICnlUY/SRo0v4422cGXrl
      IwUxVmaMK3MuJ18+TkIB8KitTDC6KnL8+QFC24KY5ZUMXrCL08faEerLlMeuPWIt9hdfqAH4
      onFSwTvcfO/3LASCONUSyTPf5bnuD880VS1IMOBRWDcJHw8jbsuzRDVAsjnNzLW3+N1sGJ9T
      Q28+xQ9Pp4jGVK7+4Q024ir14gIl5QGJsVOdyO/8lteLLTS3DnC4ow3f8BUuvrVCUBOxLJnD
      z7/wCNtlPtIxneuXhtnyVVmbXUHuO/YRx8c48XQTb/36N0ynQ7h1j1TfSU52pojpl7g0bOGr
      rjC7DP0neh+xRf8ExjLv/e59FsQ08ntvMq5FOdQSYO7GdRbMJtyLJca1IJ2DQ0R8FiMLE5il
      cbL5OqUn8fHPZyWIsXRKlkhQUxsiEdfGsGwEUUVVRDzPoFIRCIcUbFOnVq1QNUFRZfyhKMFd
      Oj+zWsXz+/EJYNZrGLaEP+RHdusUahAN+3Bts1FGzUZUZBR/mGhAwTZrlEsVTE9EUSRENUw0
      KGGZBpYtoQVURM+inC9QqXv4m6JEAhJWrUq1VkN3ZUKaihYKIdoWriCiqg1xiOs4WIaBFLib
      RMPDqhXZKtURFR+qKCBqGgFNw66UEcJhVMC1DExXQFFVRKdOsVDBdCyQ/QSDQfw+Eb24Rbnu
      ofhUREFC82tosk3FUAgHZMDBMGwEQUa9q9RxHSzLwJEC7M2f4WEbBpYDqiZSK1ZxxLsJyCVU
      RcQyDBxPaEyxtneBZFenVKpgCzKKrCAh4o+G9ugDngRBzJfDHXqPmutjRp7ZVcY9ccheNdTD
      yvbuV2rt+uxx6rO7KR/1ew/6zoPq8/nzp9vuSTCAL8eL0IeqmT5pGY/WgR50cz+OIX5a3/nY
      D4FPlUdrOykQJHT27GdfnU8R13Eb2WGEL8sIcMC+5EAQc8AB+5wDAzjgK82BARzwlebLsQg+
      YN9SvDnB23/5b77oanxsDkaAA77S7KMRwMWsFllfXae6662kKPtIdrTjVUuIYoh4/PFyoNSy
      CyznarhIaOE4yXiUoCY/cFvWrmyy5YRIhP1Ij/Do8Gyd3PoauYqJGk7Rko7jVz6jLU7HpJRd
      ZWVLR1QDhCMx0okwsuhhVCrUTAjFI098oKvHZV+NAK5rY+o6en6e969Pky9U0Ot1bLfO2toK
      GxsflbflwWTHbjFfLFKrVSluLnDjxiiLm7UHikccvUihauI8ysaxU2Z2ZISJpSyGY1HZWmct
      /xlG2LeqZJcmmMno6LUK+YXrvH1lCRMPq65TKdeeSGe2T8o+GgEagpueoSheSWJ0vcrgkaM0
      hXyIcpUMgOdQy62StQK0pqON2Jm41Is5Ngom0ZYWmu4T3JgVSJ48wolgAMcsMH7zDoVcgbaU
      BoaNpMq4loktyMjhNM2uhiwCnotZK7G5VUaLpoiF7opwGufMzU6xVHboPnaKzrgP16hhIAMu
      lmFgWg7IPoKaArjYtguIiJ5J3ZHQVBHH9pBkME0HSVGQRdAL62QrIrF0mrBv1/PLdUCUSfee
      4FiLh12NknnjXaaH/orBUIS45qHgYtXrmLa7LX6RGq4djoW5rRgTBBHZp+GTwTZNDMsGUcXv
      V/fX0/IR2VcGIIgSsiiBLCGKErKsoCjbl1Be5P2rt1l+6hBNzhJ/HP8a//ybbeSnbnB9qUJb
      Z5LxX7xHxw9+zvHw3nIlWUZRVCQHXMEBUUWkxPD52yT6dd67UOToSy/S745yRT/MC8facUuz
      fHBhkqbBLkrXJog9/TTHOxLbqZeqrBdtIrFO2hOBxmf+MComa5PXmFyqEIyHqM6O4zz9l7za
      azI9vYywtcaNuXWU3q/x3SGZyeuz1Mkzm43y4refIbbxNv80m+bpLpfJ6RkOnXyG/uQux0FR
      RJIVFAWUaBttms6WbZNfu8N8zmPw+X4Koxe5sVjANOuULZHjL71CcnOSsYVN6q5NKV/h2F/8
      Kw6bY9yYyxBoSmJt3KbQ8n2+/3T8iTOCfWQAf4JQB8++2snQUBLP7aP6qykKJY+5rSqJ3tP0
      tqp0R3L88s1phn40sEvel+HqG68z5TqUawKHTn2Ncz0xRIrUNkdY1F7mn/31qwQFKN2qUTVs
      XMdhc+R9OPlTjrWKuIEir8/m6E9FCWkSGDXKlo0WDrB3yq/QMnCKeFdjBLA6bd54fYRq7yDm
      1gxjC1Fe+vOf0RpVqWQnWJibJ/Xst/n5y62o3hz/8OsA3/6r44SwEMqjbK0vUk30E9w+h2sZ
      lAtZsgq4xWmuGYf5XhTqqyaG7uKi0X32VbrPmKxMXWZsrZWT3c1o3c30nrHIjr/JW9kXeKZN
      RvCO8/XWOobpYHUFuPTaZdae/jPaP9eb+tnz5BiAIO6Ibu5O0U3dRC9mMaRlZvVGArioZLBX
      R5XmzPde4mTATy2/yK2ReWYWNY71K4hKD1//5lDDR34XnueRWctjxOaZ1QHDBstg58yKD78k
      4dmN9cJOQj7PorixxOzsEvm6hW1vUDR6MAG0Vk6e6qY1piHiguAj3X6Eo0fb8InA1iY5bDKz
      s2SAar2OHRZwHXbuor61ytXh15j3qzR1DfGtH54kJnis3WskBMGluDTB1ILKU98cwC8AWBQW
      bzG8kOK73+tAFBwqm6vMzs2SrZhYZplMWfp8s15+Tjw5BvAAJFXFH0kQSbfTk1KAHnoOiQ/M
      lSuIEsF4B63hLBt6EYMkqD58DxjzBUEgGo9jxjvpSUpAD52eiP+ua7IYIK15jBUyFOppEn6p
      kRvAzDM7v4obP8pLR9Jg3KQwv51TRlaQd/umCAKSom6vYwAtQsxnk+ruaTzxu7pBUdm9pAk2
      H+Llk/cLYvZ2W7swy9XRTbq/8QrNKoCHkZ3l2niNYy8+Q9O2IGZudgHD38PXz3UhGsu8tXQg
      iNl3yKEYyfAyE+NXKK8GES0dofUkzw/sdt7KcvP8b1mU1MYoIoXpO9b3kfFzBEEk3d/N9OhF
      hmNRZKuOmO7nzEArqigAKqlD3cRvjHLxnRyppgC2qZPsPYom2ixvzDFem6VgZdCJP9rFBLo5
      0TrH5QvDJJoUbEMmNTBAb1vs0aM1mBmuv/UeM1YbgdvDZH1h2hMaizeusGgm0G5fJ+ML0NzV
      iV/1WNtcYWp0nXyhQuEJ3ULan96gVpmVLYd0IoIii4BFuawjCBqhkIrnGWxtVIm0xKBaIJPL
      U6u7SIqIL9pGe+yeAVQz86wU6nheQyCihWOkkzH8ik1urUy4NbETCcEqZ8g5IZIRP4JdJbu2
      RslqTL20aJrWWHA7SwyAS72wydpWCdsSkHwS4WQ7QSvPZqEKggSKiOgEaekKo5d0JEkjGFRp
      hHPRKZcswsl7wbusaoal1RKe4IEUIJpMEA1vhytxTGrVMpaaoGmPc6ZLvVxuvAeIyuQWNzFl
      CUkQQPIRDshUSyUsT0QSGwk4QtEEmpVnY6uMJ4qAjOQpxLubCewq2fM8Mh/c5Po+fhO8Pw3g
      cfEayZ4fJMz/NMrlvtzFHzrG9RAk8Z5Ix/XwdnIeP9YJ8bxGxxME8TMWy+yu58MFMfvdAP4/
      mJjy8QP2IlAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='Pizza Size' width='192'>
      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
    </thumbnail>
    <thumbnail height='64' name='Pizza Size For The Classic Deluxe Pizza' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABACAYAAABMbHjfAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADI0lEQVR4nO3dwUsUURwH8K9t1qJtlmZZgrUtZUXgLljbpTKCLoGeoogOonUrguhi/0SH
      IOq4FJHQIToEXUI3yjaESfNQbTI0UFkuu+rka0GW7aBQWcbOjLvP4ff93GZnDl9258t7b3dm
      p6pYLBZBJNQq3QGIdGIBSDQWgERjAUg0FoBEYwFINBaARGMBykwppTtCRdi2rTuCKywAicYC
      kGirdQeQwL6+X3eEivDjJIgjAInGApBoLEAJrGQCiUejmP5rzwRS/QkkkpaGVLQcWIASZNM/
      gNwghrOLdlgpDE3aMNOLd5BfsAAlqUbbkWaMG3+e6JZhInwgwjfRx/jZlSocw6ZxA78qYMH4
      1Ir4do2ZyDMWoGRhtG95h9TEwqY5jK+tcTRpzUResQAOtMSaYRrzDTCNDCKxes2JyCsWwImW
      OMJmChZMGLndaOf573ssgCNNiLdmYAwaUPsOoU53HPKMBXCoPrYD6QeT2BUL6o5Cy6CKf4tS
      XkopFG4f1B2DlsARgERjAUg0ToHKTCmFmpoa3THKzrZthEIh3TEc4whAorEAJBoLQKKxACQa
      7wmuAOvMWd0RKiKnO4ALHAFINBaAROMUyIXCzEcMPR3A+DSAuggOH41j58Zq3bHIBRbAqfwb
      3Lk5guiF0zjXEED+2we8fDaCUGc7GnVnI8dYAKfevoLVdhLdDfNXg9Zu3ovjnZozkWtcAzjV
      EsH60Rd4P1PQnYSWAa8F8qCQ/4KxJ/14mOnA1d4oav9xjFIKmZ7zFc9GpeEI4EEguBVtXZdw
      au0Ank/qTkNusABOzeaQm/v9hTyyU2tQ578LIQlcBDtnj+HerceYadyDbeuA759NBDsuopt3
      SPoS1wBuzc1iKh9AKBRE4D+HcQ2wsnEEcKu6Fhv425fvcQ1AonEKVGa8JXJl4whAorEAJBoL
      QKKxACQavwatgK5r93VHoCVwBCDRWAASjQVwyUomwYej+h8L4FI2nQYfjup/LACJxgKQaCwA
      icYCkGgsAInGApBovBTCtde429eH/oWtphNXcPkY/xvOb1gAl6K9NxDVHYI84xSIRPsJDDXF
      d9QgLp0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue Per Pizza Type' width='192'>
      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
      1O+cg+4lL6UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='The Classic Deluxe Pizza Per Day of The Week' width='192'>
      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
      2QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='The Classic Deluxe Pizza Per Month' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
